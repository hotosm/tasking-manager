{"openapi":"3.1.0","info":{"title":"Tasking Manager","description":"HOTOSM Tasking Manager","license":{"name":"BSD 2-Clause","url":"https://raw.githubusercontent.com/hotosm/tasking-manager/develop/LICENSE.md"},"version":"0.1.0"},"paths":{"/api/v2/projects/{project_id}/":{"get":{"tags":["projects"],"summary":"Get Project","description":"Get a specified project including it's area\n---\ntags:\n    - projects\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Authorization\n        description: Base64 encoded session token\n        required: false\n        type: string\n        default: Token sessionTokenHere==\n    - in: header\n        name: Accept-Language\n        description: Language user is requesting\n        type: string\n        required: true\n        default: en\n    - name: project_id\n        in: path\n        description: Unique project ID\n        required: true\n        type: integer\n        default: 1\n    - in: query\n        name: as_file\n        type: boolean\n        description: Set to true if file download is preferred\n        default: False\n    - in: query\n        name: abbreviated\n        type: boolean\n        description: Set to true if only state information is desired\n        default: False\nresponses:\n    200:\n        description: Project found\n    403:\n        description: Forbidden\n    404:\n        description: Project not found\n    500:\n        description: Internal Server Error","operationId":"get_project_api_v2_projects__project_id___get","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"integer","title":"Project Id"}},{"name":"as_file","in":"query","required":false,"schema":{"type":"string","default":"False","title":"As File"}},{"name":"abbreviated","in":"query","required":false,"schema":{"type":"string","default":"False","title":"Abbreviated"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"patch":{"tags":["projects"],"summary":"Patch Project","description":"Updates a Tasking-Manager project\n---\ntags:\n    - projects\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Authorization\n        description: Base64 encoded session token\n        required: true\n        type: string\n        default: Token sessionTokenHere==\n    - name: project_id\n        in: path\n        description: Unique project ID\n        required: true\n        type: integer\n        default: 1\n    - in: body\n        name: body\n        required: true\n        description: JSON object for updating an existing project\n        schema:\n        properties:\n            projectStatus:\n                type: string\n                default: DRAFT\n            projectPriority:\n                type: string\n                default: MEDIUM\n            defaultLocale:\n                type: string\n                default: en\n            difficulty:\n                type: string\n                default: EASY\n            validation_permission:\n                type: string\n                default: ANY\n            mapping_permission:\n                type: string\n                default: ANY\n            private:\n                type: boolean\n                default: false\n            changesetComment:\n                type: string\n                default: hotosm-project-1\n            dueDate:\n                type: date\n                default: \"2017-04-11T12:38:49\"\n            imagery:\n                type: string\n                default: http//www.bing.com/maps/\n            josmPreset:\n                type: string\n                default: josm preset goes here\n            mappingTypes:\n                type: array\n                items:\n                    type: string\n                default: [BUILDINGS, ROADS]\n            mappingEditors:\n                type: array\n                items:\n                    type: string\n                default: [ID, JOSM, POTLATCH_2, FIELD_PAPERS]\n            validationEditors:\n                type: array\n                items:\n                    type: string\n                default: [ID, JOSM, POTLATCH_2, FIELD_PAPERS]\n            campaign:\n                type: string\n                default: malaria\n            organisation:\n                type: integer\n                default: 1\n            countryTag:\n                    type: array\n                    items:\n                        type: string\n                    default: []\n            licenseId:\n                type: integer\n                default: 1\n                description: Id of imagery license associated with the project\n            allowedUsernames:\n                type: array\n                items:\n                    type: string\n                default: [\"Iain Hunter\", LindaA1]\n            priorityAreas:\n                type: array\n                items:\n                    schema:\n                        $ref: \"#/definitions/GeoJsonPolygon\"\n            projectInfoLocales:\n                type: array\n                items:\n                    schema:\n                        $ref: \"#/definitions/ProjectInfo\"\n            taskCreationMode:\n                type: integer\n                default: GRID\nresponses:\n    200:\n        description: Project updated\n    400:\n        description: Client Error - Invalid Request\n    401:\n        description: Unauthorized - Invalid credentials\n    403:\n        description: Forbidden\n    404:\n        description: Project not found\n    500:\n        description: Internal Server Error","operationId":"patch_project_api_v2_projects__project_id___patch","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"integer","title":"Project Id"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","title":"Project Dto"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["projects"],"summary":"Delete Project","description":"Deletes a Tasking-Manager project\n---\ntags:\n    - projects\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Authorization\n        description: Base64 encoded session token\n        required: true\n        type: string\n        default: Token sessionTokenHere==\n    - name: project_id\n        in: path\n        description: Unique project ID\n        required: true\n        type: integer\n        default: 1\nresponses:\n    200:\n        description: Project deleted\n    401:\n        description: Unauthorized - Invalid credentials\n    403:\n        description: Forbidden\n    404:\n        description: Project not found\n    500:\n        description: Internal Server Error","operationId":"delete_project_api_v2_projects__project_id___delete","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"integer","title":"Project Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/projects/":{"post":{"tags":["projects"],"summary":"Create Project","description":"Creates a tasking-manager project\n---\ntags:\n    - projects\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Authorization\n        description: Base64 encoded session token\n        required: true\n        type: string\n        default: Token sessionTokenHere==\n    - in: body\n        name: body\n        required: true\n        description: JSON object for creating draft project\n        schema:\n        properties:\n            cloneFromProjectId:\n                type: int\n                default: 1\n                description: Specify this value if you want to clone a project, otherwise avoid information\n            projectName:\n                type: string\n                default: HOT Project\n            areaOfInterest:\n                schema:\n                    properties:\n                        type:\n                            type: string\n                            default: FeatureCollection\n                        features:\n                            type: array\n                            items:\n                                schema:\n                                    $ref: \"#/definitions/GeoJsonFeature\"\n                tasks:\n                    schema:\n                        properties:\n                            type:\n                                type: string\n                                default: FeatureCollection\n                            features:\n                                type: array\n                                items:\n                                    schema:\n                                        $ref: \"#/definitions/GeoJsonFeature\"\n                arbitraryTasks:\n                    type: boolean\n                    default: false\nresponses:\n    201:\n        description: Draft project created successfully\n    400:\n        description: Client Error - Invalid Request\n    401:\n        description: Unauthorized - Invalid credentials\n    403:\n        description: Forbidden\n    500:\n        description: Internal Server Error","operationId":"create_project_api_v2_projects__post","security":[{"APIKeyHeader":[]}],"requestBody":{"content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/DraftProjectDTO"}],"title":"Draft Project Dto"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"get":{"tags":["projects"],"summary":"Get Projects","description":"List and search for projects\n---\ntags:\n    - projects\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Authorization\n        description: Base64 encoded session token\n        type: string\n        default: Token sessionTokenHere==\n    - in: header\n        name: Accept-Language\n        description: Language user is requesting\n        type: string\n        required: true\n        default: en\n    - in: query\n        name: difficulty\n        type: string\n    - in: query\n        name: orderBy\n        type: string\n        default: priority\n        enum: [id,difficulty,priority,status,last_updated,due_date]\n    - in: query\n        name: orderByType\n        type: string\n        default: ASC\n        enum: [ASC, DESC]\n    - in: query\n        name: mappingTypes\n        type: string\n    - in: query\n        name: mappingTypesExact\n        type: boolean\n        default: false\n        description: if true, limits projects to match the exact mapping types requested\n    - in: query\n        name: organisationName\n        description: Organisation name to search for\n        type: string\n    - in: query\n        name: organisationId\n        description: Organisation ID to search for\n        type: integer\n    - in: query\n        name: campaign\n        description: Campaign name to search for\n        type: string\n    - in: query\n        name: page\n        description: Page of results user requested\n        type: integer\n        default: 1\n    - in: query\n        name: textSearch\n        description: Text to search\n        type: string\n    - in: query\n        name: country\n        description: Project country\n        type: string\n    - in: query\n        name: action\n        description: Filter projects by possible actions\n        enum: [map, validate, any]\n        type: string\n    - in: query\n        name: projectStatuses\n        description: Authenticated PMs can search for archived or draft statuses\n        type: string\n    - in: query\n        name: lastUpdatedFrom\n        description: Filter projects whose last update date is equal or greater than a date\n        type: string\n    - in: query\n        name: lastUpdatedTo\n        description: Filter projects whose last update date is equal or lower than a date\n        type: string\n    - in: query\n        name: createdFrom\n        description: Filter projects whose creation date is equal or greater than a date\n        type: string\n    - in: query\n        name: createdTo\n        description: Filter projects whose creation date is equal or lower than a date\n        type: string\n    - in: query\n        name: interests\n        type: string\n        description: Filter by interest on project\n        default: null\n    - in: query\n        name: createdByMe\n        description: Limit to projects created by the authenticated user\n        type: boolean\n        default: false\n    - in: query\n        name: mappedByMe\n        description: Limit to projects mapped/validated by the authenticated user\n        type: boolean\n        default: false\n    - in: query\n        name: favoritedByMe\n        description: Limit to projects favorited by the authenticated user\n        type: boolean\n        default: false\n    - in: query\n        name: managedByMe\n        description:\n        Limit to projects that can be managed by the authenticated user,\n        excluding the ones created by them\n        type: boolean\n        default: false\n    - in: query\n        name: basedOnMyInterests\n        type: boolean\n        description: Filter projects based on user interests\n        default: false\n    - in: query\n        name: teamId\n        type: string\n        description: Filter by team on project\n        default: null\n        name: omitMapResults\n        type: boolean\n        description: If true, it will not return the project centroid's geometries.\n        default: false\nresponses:\n    200:\n        description: Projects found\n    404:\n        description: No projects found\n    500:\n        description: Internal Server Error","operationId":"get_projects_api_v2_projects__get","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"difficulty","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Difficulty"}},{"name":"action","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Action"}},{"name":"organisationName","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Organisationname"}},{"name":"organisationId","in":"query","required":false,"schema":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Organisationid"}},{"name":"teamId","in":"query","required":false,"schema":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Teamid"}},{"name":"campaign","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Campaign"}},{"name":"orderBy","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"priority","title":"Orderby"}},{"name":"country","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Country"}},{"name":"orderByType","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"default":"ASC","title":"Orderbytype"}},{"name":"page","in":"query","required":false,"schema":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":1,"title":"Page"}},{"name":"textSearch","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Textsearch"}},{"name":"omitMapResults","in":"query","required":false,"schema":{"anyOf":[{"type":"boolean"},{"type":"null"}],"default":false,"title":"Omitmapresults"}},{"name":"lastUpdatedFrom","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Lastupdatedfrom"}},{"name":"lastUpdatedTo","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Lastupdatedto"}},{"name":"createdFrom","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Createdfrom"}},{"name":"createdTo","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Createdto"}},{"name":"partnerId","in":"query","required":false,"schema":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Partnerid"}},{"name":"partnershipFrom","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Partnershipfrom"}},{"name":"partnershipTo","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Partnershipto"}},{"name":"downloadAsCSV","in":"query","required":false,"schema":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Downloadascsv"}},{"name":"createdByMe","in":"query","required":false,"schema":{"type":"boolean","default":false,"title":"Createdbyme"}},{"name":"mappedByMe","in":"query","required":false,"schema":{"type":"boolean","default":false,"title":"Mappedbyme"}},{"name":"favoritedByMe","in":"query","required":false,"schema":{"type":"boolean","default":false,"title":"Favoritedbyme"}},{"name":"managedByMe","in":"query","required":false,"schema":{"type":"boolean","default":false,"title":"Managedbyme"}},{"name":"basedOnMyInterests","in":"query","required":false,"schema":{"type":"boolean","default":false,"title":"Basedonmyinterests"}},{"name":"mappingTypes","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Mappingtypes"}},{"name":"mappingTypesExact","in":"query","required":false,"schema":{"anyOf":[{"type":"boolean"},{"type":"null"}],"default":false,"title":"Mappingtypesexact"}},{"name":"projectStatuses","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Projectstatuses"}},{"name":"interests","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Interests"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/projects/queries/bbox/":{"get":{"tags":["projects"],"summary":"Get By Bbox","description":"List and search projects by bounding box\n---\ntags:\n    - projects\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Authorization\n        description: Base64 encoded session token\n        required: true\n        type: string\n        default: Token sessionTokenHere==\n    - in: header\n        name: Accept-Language\n        description: Language user is requesting\n        type: string\n        default: en\n    - in: query\n        name: bbox\n        description: comma separated list xmin, ymin, xmax, ymax\n        type: string\n        required: true\n        default: 34.404,-1.034, 34.717,-0.624\n    - in: query\n        name: srid\n        description: srid of bbox coords\n        type: integer\n        default: 4326\n    - in: query\n        name: createdByMe\n        description: limit to projects created by authenticated user\n        type: boolean\n        required: true\n        default: false\n\nresponses:\n    200:\n        description: ok\n    400:\n        description: Client Error - Invalid Request\n    403:\n        description: Forbidden\n    500:\n        description: Internal Server Error","operationId":"get_by_bbox_api_v2_projects_queries_bbox__get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"}},"security":[{"APIKeyHeader":[]}]}},"/api/v2/projects/queries/myself/owner/":{"get":{"tags":["projects"],"summary":"Get My Projects","description":"Get all projects for logged in admin\n---\ntags:\n    - projects\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Authorization\n        description: Base64 encoded session token\n        required: true\n        type: string\n        default: Token sessionTokenHere==\n    - in: header\n        name: Accept-Language\n        description: Language user is requesting\n        type: string\n        required: true\n        default: en\nresponses:\n    200:\n        description: All mapped tasks validated\n    401:\n        description: Unauthorized - Invalid credentials\n    403:\n        description: Forbidden\n    404:\n        description: Admin has no projects\n    500:\n        description: Internal Server Error","operationId":"get_my_projects_api_v2_projects_queries_myself_owner__get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"}},"security":[{"APIKeyHeader":[]}]}},"/api/v2/projects/queries/{username}/touched/":{"get":{"tags":["projects"],"summary":"Get Mapped Projects","description":"Gets projects user has mapped\n---\ntags:\n    - projects\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Accept-Language\n        description: Language user is requesting\n        type: string\n        required: true\n        default: en\n    - name: username\n        in: path\n        description: The users username\n        required: true\n        type: string\n        default: Thinkwhere\nresponses:\n    200:\n        description: Mapped projects found\n    404:\n        description: User not found\n    500:\n        description: Internal Server Error","operationId":"get_mapped_projects_api_v2_projects_queries__username__touched__get","parameters":[{"name":"username","in":"path","required":true,"schema":{"title":"Username"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/projects/{project_id}/queries/summary/":{"get":{"tags":["projects"],"summary":"Get Project Summary","description":"Gets project summary\n---\ntags:\n    - projects\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Accept-Language\n        description: Language user is requesting\n        type: string\n        required: true\n        default: en\n    - name: project_id\n        in: path\n        description: The ID of the project\n        required: true\n        type: integer\n        default: 1\nresponses:\n    200:\n        description: Project Summary\n    404:\n        description: Project not found\n    500:\n        description: Internal Server Error","operationId":"get_project_summary_api_v2_projects__project_id__queries_summary__get","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"integer","title":"Project Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/projects/{project_id}/queries/nogeometries/":{"get":{"tags":["projects"],"summary":"Get No Geometries","description":"Get HOT Project for mapping\n---\ntags:\n    - projects\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Accept-Language\n        description: Language user is requesting\n        type: string\n        required: true\n        default: en\n    - name: project_id\n        in: path\n        description: Unique project ID\n        required: true\n        type: integer\n        default: 1\n    - in: query\n        name: as_file\n        type: boolean\n        description: Set to true if file download is preferred\n        default: False\nresponses:\n    200:\n        description: Project found\n    403:\n        description: Forbidden\n    404:\n        description: Project not found\n    500:\n        description: Internal Server Error","operationId":"get_no_geometries_api_v2_projects__project_id__queries_nogeometries__get","parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"integer","title":"Project Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/projects/{project_id}/queries/notasks/":{"get":{"tags":["projects"],"summary":"Get Notasks","description":"Retrieves a Tasking-Manager project\n---\ntags:\n    - projects\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Authorization\n        description: Base64 encoded session token\n        required: true\n        type: string\n        default: Token sessionTokenHere==\n    - name: project_id\n        in: path\n        description: Unique project ID\n        required: true\n        type: integer\n        default: 1\nresponses:\n    200:\n        description: Project found\n    401:\n        description: Unauthorized - Invalid credentials\n    403:\n        description: Forbidden\n    404:\n        description: Project not found\n    500:\n        description: Internal Server Error","operationId":"get_notasks_api_v2_projects__project_id__queries_notasks__get","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"integer","title":"Project Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/projects/{project_id}/queries/aoi/":{"get":{"tags":["projects"],"summary":"Get Aoi","description":"Get AOI of Project\n---\ntags:\n    - projects\nproduces:\n    - application/json\nparameters:\n    - name: project_id\n      in: path\n      description: Unique project ID\n      required: true\n      type: integer\n      default: 1\n    - in: query\n      name: as_file\n      type: boolean\n      description: Set to true if file download preferred\n      default: False\nresponses:\n    200:\n        description: Project AOI returned\n    403:\n        description: Forbidden\n    404:\n        description: Project not found\n    500:\n        description: Internal Server Error","operationId":"get_aoi_api_v2_projects__project_id__queries_aoi__get","parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"integer","description":"Unique project ID","title":"Project Id"},"description":"Unique project ID"},{"name":"as_file","in":"query","required":false,"schema":{"type":"boolean","description":"Set to true if file download preferred","default":false,"title":"As File"},"description":"Set to true if file download preferred"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/projects/{project_id}/queries/priority-areas/":{"get":{"tags":["projects"],"summary":"Get Priority Areas","description":"Get Priority Areas of a project\n---\ntags:\n    - projects\nproduces:\n    - application/json\nparameters:\n    - name: project_id\n        in: path\n        description: Unique project ID\n        required: true\n        type: integer\n        default: 1\nresponses:\n    200:\n        description: Project found\n    403:\n        description: Forbidden\n    404:\n        description: Project not found\n    500:\n        description: Internal Server Error","operationId":"get_priority_areas_api_v2_projects__project_id__queries_priority_areas__get","parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"integer","title":"Project Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/projects/queries/featured/":{"get":{"tags":["projects"],"summary":"Get Featured","description":"Get featured projects\n---\ntags:\n    - projects\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Authorization\n        description: Base64 encoded session token\n        required: false\n        type: string\n        default: Token sessionTokenHere==\nresponses:\n    200:\n        description: Featured projects\n    500:\n        description: Internal Server Error","operationId":"get_featured_api_v2_projects_queries_featured__get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"}}}},"/api/v2/projects/queries/{project_id}/similar-projects/":{"get":{"tags":["projects"],"summary":"Get Similar Projects","description":"Get similar projects\n---\ntags:\n    - projects\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Authorization\n        description: Base64 encoded session token\n        required: false\n        type: string\n        default: Token sessionTokenHere==\n    - name: project_id\n        in: path\n        description: Project ID to get similar projects for\n        required: true\n        type: integer\n        default: 1\n    - in: query\n        name: limit\n        type: integer\n        description: Number of similar projects to return\n        default: 4\nresponses:\n    200:\n        description: Similar projects\n    404:\n        description: Project not found or project is not published\n    500:\n        description: Internal Server Error","operationId":"get_similar_projects_api_v2_projects_queries__project_id__similar_projects__get","parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"integer","title":"Project Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/projects/queries/active/":{"get":{"tags":["projects"],"summary":"Get Active","description":"Get active projects\n---\ntags:\n    - projects\nproduces:\n    - application/json\nparameters:\n    - in: header\n      name: Authorization\n      description: Base64 encoded session token\n      required: false\n      type: string\n      default: Token sessionTokenHere==\n    - name: interval\n      in: path\n      description: Time interval in hours to get active project\n      required: false\n      type: integer\n      default: 24\nresponses:\n    200:\n        description: Active projects geojson\n    404:\n        description: Project not found or project is not published\n    500:\n        description: Internal Server Error","operationId":"get_active_api_v2_projects_queries_active__get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"}}}},"/api/v2/projects/{project_id}/activities/":{"get":{"tags":["projects"],"summary":"Get Activities","description":"Get all user activity on a project\n---\ntags:\n  - projects\nproduces:\n  - application/json\nparameters:\n    - name: project_id\n      in: path\n      description: Unique project ID\n      required: true\n      type: integer\n      default: 1\n    - in: query\n      name: page\n      description: Page of results user requested\n      type: integer\nresponses:\n    200:\n        description: Project activity\n    404:\n        description: No activity\n    500:\n        description: Internal Server Error","operationId":"get_activities_api_v2_projects__project_id__activities__get","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"integer","title":"Project Id"}},{"name":"page","in":"query","required":false,"schema":{"type":"integer","minimum":1,"description":"Page of results user requested","default":1,"title":"Page"},"description":"Page of results user requested"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/projects/{project_id}/activities/latest/":{"get":{"tags":["projects"],"summary":"Get Latest Activities","description":"Get latest user activity on all of project task\n---\ntags:\n  - projects\nproduces:\n  - application/json\nparameters:\n    - name: project_id\n      in: path\n      required: true\n      type: integer\n      default: 1\nresponses:\n    200:\n        description: Project activity\n    404:\n        description: No activity\n    500:\n        description: Internal Server Error","operationId":"get_latest_activities_api_v2_projects__project_id__activities_latest__get","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"integer","title":"Project Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/projects/{project_id}/contributions/":{"get":{"tags":["projects"],"summary":"Get Project Contributions","description":"Get all user contributions on a project\n---\ntags:\n  - projects\nproduces:\n  - application/json\nparameters:\n    - name: project_id\n      in: path\n      description: Unique project ID\n      required: true\n      type: integer\n      default: 1\nresponses:\n    200:\n        description: User contributions\n    404:\n        description: No contributions\n    500:\n        description: Internal Server Error","operationId":"get_project_contributions_api_v2_projects__project_id__contributions__get","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"integer","title":"Project Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/projects/{project_id}/contributions/queries/day/":{"get":{"tags":["projects"],"summary":"Get Contributions By Day","description":"Get contributions by day for a project\n---\ntags:\n  - projects\nproduces:\n  - application/json\nparameters:\n    - name: project_id\n      in: path\n      description: Unique project ID\n      required: true\n      type: integer\n      default: 1\nresponses:\n    200:\n        description: Project contributions by day\n    404:\n        description: Not found\n    500:\n        description: Internal Server Error","operationId":"get_contributions_by_day_api_v2_projects__project_id__contributions_queries_day__get","parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"integer","title":"Project Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/projects/queries/popular/":{"get":{"tags":["projects"],"summary":"Get Popular","description":"Get popular projects\n---\ntags:\n  - projects\nproduces:\n  - application/json\nresponses:\n    200:\n        description: Popular Projects stats\n    500:\n        description: Internal Server Error","operationId":"get_popular_api_v2_projects_queries_popular__get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"}}}},"/api/v2/projects/{project_id}/statistics/":{"get":{"tags":["projects"],"summary":"Get Project Stats","description":"Get Project Stats\n---\ntags:\n  - projects\nproduces:\n  - application/json\nparameters:\n    - in: header\n      name: Accept-Language\n      description: Language user is requesting\n      type: string\n      required: true\n      default: en\n    - name: project_id\n      in: path\n      description: Unique project ID\n      required: true\n      type: integer\n      default: 1\nresponses:\n    200:\n        description: Project stats\n    404:\n        description: Not found\n    500:\n        description: Internal Server Error","operationId":"get_project_stats_api_v2_projects__project_id__statistics__get","parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"integer","title":"Project Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/projects/{project_id}/statistics/queries/{username}/":{"get":{"tags":["projects"],"summary":"Get Project User Stats","description":"Get detailed stats about user\n---\ntags:\n  - projects\nproduces:\n  - application/json\nparameters:\n    - name: project_id\n      in: path\n      description: Unique project ID\n      required: true\n      type: integer\n      default: 1\n    - name: username\n      in: path\n      description: Mapper's OpenStreetMap username\n      required: true\n      type: string\n      default: Thinkwhere\nresponses:\n    200:\n        description: User found\n    404:\n        description: User not found\n    500:\n        description: Internal Server Error","operationId":"get_project_user_stats_api_v2_projects__project_id__statistics_queries__username___get","parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"integer","title":"Project Id"}},{"name":"username","in":"path","required":true,"schema":{"type":"string","title":"Username"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/projects/{project_id}/teams/":{"get":{"tags":["projects"],"summary":"Get Project Teams","description":"Get teams assigned with a project\n---\ntags:\n    - teams\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Authorization\n        description: Base64 encoded session token\n        required: true\n        type: string\n        default: Token sessionTokenHere==\n    - name: project_id\n        in: path\n        description: Unique project ID\n        required: true\n        type: integer\n        default: 1\nresponses:\n    200:\n        description: Teams listed successfully\n    403:\n        description: Forbidden, if user is not authenticated\n    404:\n        description: Not found\n    500:\n        description: Internal Server Error","operationId":"get_project_teams_api_v2_projects__project_id__teams__get","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"integer","title":"Project Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/projects/{project_id}/teams/{team_id}/":{"post":{"tags":["projects"],"summary":"Assign Team","description":"Assign a team to a project\n---\ntags:\n  - teams\nproduces:\n  - application/json\nparameters:\n    - in: header\n      name: Authorization\n      description: Base64 encoded session token\n      required: true\n      type: string\n      default: Token sessionTokenHere==\n    - name: project_id\n      in: path\n      description: Unique project ID\n      required: true\n      type: integer\n      default: 1\n    - name: team_id\n      in: path\n      description: Unique team ID\n      required: true\n      type: integer\n      default: 1\n    - in: body\n      name: body\n      required: true\n      description: The role that the team will have on the project\n      schema:\n          properties:\n              role:\n                type: string\nresponses:\n    201:\n        description: Team project assignment created\n    401:\n        description: Forbidden, if user is not a manager of the project\n    403:\n        description: Forbidden, if user is not authenticated\n    404:\n        description: Not found\n    500:\n        description: Internal Server Error","operationId":"assign_team_api_v2_projects__project_id__teams__team_id___post","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"team_id","in":"path","required":true,"schema":{"type":"integer","title":"Team Id"}},{"name":"project_id","in":"path","required":true,"schema":{"type":"integer","title":"Project Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","title":"Data"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/projects/{team_id}/projects/{project_id}/":{"patch":{"tags":["projects"],"summary":"Patch Project Team","description":"Update role of a team on a project\n---\ntags:\n  - teams\nproduces:\n  - application/json\nparameters:\n    - in: header\n      name: Authorization\n      description: Base64 encoded session token\n      required: true\n      type: string\n      default: Token sessionTokenHere==\n    - name: project_id\n      in: path\n      description: Unique project ID\n      required: true\n      type: integer\n      default: 1\n    - name: team_id\n      in: path\n      description: Unique team ID\n      required: true\n      type: integer\n      default: 1\n    - in: body\n      name: body\n      required: true\n      description: The role that the team will have on the project\n      schema:\n          properties:\n              role:\n                type: string\nresponses:\n    201:\n        description: Team project assignment created\n    401:\n        description: Forbidden, if user is not a manager of the project\n    403:\n        description: Forbidden, if user is not authenticated\n    404:\n        description: Not found\n    500:\n        description: Internal Server Error","operationId":"patch_project_team_api_v2_projects__team_id__projects__project_id___patch","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"team_id","in":"path","required":true,"schema":{"type":"integer","title":"Team Id"}},{"name":"project_id","in":"path","required":true,"schema":{"type":"integer","title":"Project Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","title":"Data"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["projects"],"summary":"Remove Team","description":"Deletes the specified team project assignment\n---\ntags:\n    - teams\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Authorization\n        description: Base64 encoded session token\n        required: true\n        type: string\n        default: Token sessionTokenHere==\n    - name: message_id\n        in: path\n        description: Unique message ID\n        required: true\n        type: integer\n        default: 1\nresponses:\n    200:\n        description: Team unassigned of the project\n    401:\n        description: Forbidden, if user is not a manager of the project\n    403:\n        description: Forbidden, if user is not authenticated\n    404:\n        description: Not found\n    500:\n        description: Internal Server Error","operationId":"remove_team_api_v2_projects__team_id__projects__project_id___delete","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"team_id","in":"path","required":true,"schema":{"type":"integer","title":"Team Id"}},{"name":"project_id","in":"path","required":true,"schema":{"type":"integer","title":"Project Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/projects/{project_id}/campaigns/{campaign_id}/":{"post":{"tags":["projects"],"summary":"Create Project Campaign","description":"Assign a campaign for a project\n---\ntags:\n    - campaigns\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Authorization\n        description: Base64 encoded session token\n        required: true\n        type: string\n        default: Token sessionTokenHere==\n    - name: project_id\n        in: path\n        description: Unique project ID\n        required: true\n        type: integer\n        default: 1\n    - name: campaign_id\n        in: path\n        description: Unique campaign ID\n        required: true\n        type: integer\n        default: 1\nresponses:\n    201:\n        description: Campaign assigned successfully\n    400:\n        description: Client Error - Invalid Request\n    401:\n        description: Unauthorized - Invalid credentials\n    403:\n        description: Forbidden\n    500:\n        description: Internal Server Error","operationId":"create_project_campaign_api_v2_projects__project_id__campaigns__campaign_id___post","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"integer","title":"Project Id"}},{"name":"campaign_id","in":"path","required":true,"schema":{"type":"integer","title":"Campaign Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["projects"],"summary":"Delete Project Campaign","description":"Delete a campaign for a project\n---\ntags:\n    - campaigns\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Authorization\n        description: Base64 encoded session token\n        required: true\n        type: string\n        default: Token sessionTokenHere==\n    - name: project_id\n        in: path\n        description: Unique project ID\n        required: true\n        type: integer\n        default: 1\n    - name: campaign_id\n        in: path\n        description: Unique campaign ID\n        required: true\n        type: integer\n        default: 1\nresponses:\n    200:\n        description: Campaign assigned successfully\n    400:\n        description: Client Error - Invalid Request\n    401:\n        description: Unauthorized - Invalid credentials\n    403:\n        description: Forbidden\n    500:\n        description: Internal Server Error","operationId":"delete_project_campaign_api_v2_projects__project_id__campaigns__campaign_id___delete","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"integer","title":"Project Id"}},{"name":"campaign_id","in":"path","required":true,"schema":{"type":"integer","title":"Campaign Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/projects/{project_id}/campaigns/":{"get":{"tags":["projects"],"summary":"Get Project Campaigns","description":"Gets all campaigns for a project\n---\ntags:\n    - campaigns\nproduces:\n    - application/json\nparameters:\n    - name: project_id\n        in: path\n        description: Unique project ID\n        required: true\n        type: integer\n        default: 1\nresponses:\n    200:\n        description: Campaign list returned successfully\n    400:\n        description: Client Error - Invalid Request\n    401:\n        description: Unauthorized - Invalid credentials\n    500:\n        description: Internal Server Error","operationId":"get_project_campaigns_api_v2_projects__project_id__campaigns__get","parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"integer","title":"Project Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/projects/{project_id}/actions/transfer-ownership/":{"post":{"tags":["projects"],"summary":"Transfer Ownership","description":"Transfers a project to a new user\n---\ntags:\n    - projects\nproduces:\n    - application/json\nparameters:\n    - in: header\n      name: Authorization\n      description: Base64 encoded session token\n      required: true\n      type: string\n      default: Token sessionTokenHere==\n    - name: project_id\n      in: path\n      description: Unique project ID\n      required: true\n      type: integer\n      default: 1\n    - in: body\n      name: body\n      required: true\n      description: username of the new owner\n      schema:\n          properties:\n              username:\n                type: string\nresponses:\n    200:\n        description: Project ownership transferred successfully\n    401:\n        description: Unauthorized - Invalid credentials\n    403:\n        description: Forbidden\n    500:\n        description: Internal Server Error","operationId":"transfer_ownership_api_v2_projects__project_id__actions_transfer_ownership__post","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"integer","title":"Project Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","title":"Data"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/projects/{project_id}/actions/message-contributors/":{"post":{"tags":["projects"],"summary":"Message Contributors","description":"Send message to all contributors of a project\n---\ntags:\n    - projects\nproduces:\n    - application/json\nparameters:\n    - in: header\n      name: Authorization\n      description: Base64 encoded session token\n      required: true\n      type: string\n      default: Token sessionTokenHere==\n    - name: project_id\n      in: path\n      description: Unique project ID\n      required: true\n      type: integer\n      default: 1\n    - in: body\n      name: body\n      required: true\n      description: JSON object for creating message\n      schema:\n        properties:\n            subject:\n                type: string\n                default: Thanks\n                required: true\n            message:\n                type: string\n                default: Thanks for your contribution\n                required: true\nresponses:\n    200:\n        description: Message sent successfully\n    401:\n        description: Unauthorized - Invalid credentials\n    403:\n        description: Forbidden\n    500:\n        description: Internal Server Error","operationId":"message_contributors_api_v2_projects__project_id__actions_message_contributors__post","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"integer","title":"Project Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/projects/{project_id}/actions/feature/":{"post":{"tags":["projects"],"summary":"Feature","description":"Set a project as featured\n---\ntags:\n    - projects\nproduces:\n    - application/json\nparameters:\n    - in: header\n      name: Authorization\n      description: Base64 encoded session token\n      required: true\n      type: string\n      default: Token sessionTokenHere==\n    - name: project_id\n      in: path\n      description: Unique project ID\n      required: true\n      type: integer\n      default: 1\nresponses:\n    200:\n        description: Featured projects\n    400:\n        description: Bad request\n    403:\n        description: Forbidden\n    404:\n        description: Project not found\n    500:\n        description: Internal Server Error","operationId":"feature_api_v2_projects__project_id__actions_feature__post","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"integer","title":"Project Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/projects/{project_id}/actions/remove-feature/":{"post":{"tags":["projects"],"summary":"Remove Feature","description":"Unset a project as featured\n---\ntags:\n    - projects\nproduces:\n    - application/json\nparameters:\n    - in: header\n      name: Authorization\n      description: Base64 encoded session token\n      required: true\n      type: string\n      default: Token sessionTokenHere==\n    - name: project_id\n      in: path\n      description: Unique project ID\n      required: true\n      type: integer\n      default: 1\nresponses:\n    200:\n        description: Project is no longer featured\n    400:\n        description: Bad request\n    403:\n        description: Forbidden\n    404:\n        description: Project not found\n    500:\n        description: Internal Server Error","operationId":"remove_feature_api_v2_projects__project_id__actions_remove_feature__post","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"integer","title":"Project Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/projects/{project_id}/actions/set-interests/":{"post":{"tags":["projects"],"summary":"Set Interests","description":"Creates a relationship between project and interests\n---\ntags:\n    - interests\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Authorization\n        description: Base64 encoded session token\n        required: true\n        type: string\n        default: Token sessionTokenHere==\n    - name: project_id\n        in: path\n        description: Unique project ID\n        required: true\n        type: integer\n        default: 1\n    - in: body\n        name: body\n        required: true\n        description: JSON object for creating/updating project and interests relationships\n        schema:\n            properties:\n                interests:\n                    type: array\n                    items:\n                    type: integer\nresponses:\n    200:\n        description: New project interest relationship created\n    400:\n        description: Invalid Request\n    401:\n        description: Unauthorized - Invalid credentials\n    403:\n        description: Forbidden\n    500:\n        description: Internal Server Error","operationId":"set_interests_api_v2_projects__project_id__actions_set_interests__post","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"integer","title":"Project Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","title":"Data"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/projects/actions/intersecting-tiles/":{"post":{"tags":["projects"],"summary":"Intersecting Tiles","description":"Gets the tiles intersecting the aoi\n---\ntags:\n    - grid\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Authorization\n        description: Base64 encoded session token\n        required: true\n        type: string\n        default: Token sessionTokenHere==\n    - in: body\n        name: body\n        required: true\n        description: JSON object containing aoi and tasks and bool flag for controlling clip grid to aoi\n        schema:\n            properties:\n                clipToAoi:\n                type: boolean\n                default: true\n                areaOfInterest:\n                    schema:\n                        properties:\n                            type:\n                                type: string\n                                default: FeatureCollection\n                            features:\n                                type: array\n                                items:\n                                    schema:\n                                        $ref: \"#/definitions/GeoJsonFeature\"\n                grid:\n                    schema:\n                        properties:\n                            type:\n                                type: string\n                                default: FeatureCollection\n                            features:\n                                type: array\n                                items:\n                                    schema:\n                                        $ref: \"#/definitions/GeoJsonFeature\"\nresponses:\n    200:\n        description: Intersecting tasks found successfully\n    400:\n        description: Client Error - Invalid Request\n    500:\n        description: Internal Server Error","operationId":"intersecting_tiles_api_v2_projects_actions_intersecting_tiles__post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/GridDTO"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"APIKeyHeader":[]}]}},"/api/v2/projects/{project_id}/favorite/":{"get":{"tags":["projects"],"summary":"Get Favorite","description":"Validate that project is favorited\n---\ntags:\n    - favorites\nproduces:\n    - application/json\nparameters:\n    - in: header\n      name: Authorization\n      description: Base64 encoded session token\n      required: true\n      type: string\n      default: Token sessionTokenHere==\n    - name: project_id\n      in: path\n      description: Unique project ID\n      required: true\n      type: integer\nresponses:\n    200:\n        description: Project favorite\n    400:\n        description: Invalid Request\n    401:\n        description: Unauthorized - Invalid credentials\n    500:\n        description: Internal Server Error","operationId":"get_favorite_api_v2_projects__project_id__favorite__get","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"integer","title":"Project Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"post":{"tags":["projects"],"summary":"Make Favorite","description":"Set a project as favorite\n---\ntags:\n    - favorites\nproduces:\n    - application/json\nparameters:\n    - in: header\n      name: Authorization\n      description: Base64 encoded session token\n      required: true\n      type: string\n      default: Token sessionTokenHere==\n    - name: project_id\n      in: path\n      description: Unique project ID\n      required: true\n      type: integer\nresponses:\n    200:\n        description: New favorite created\n    400:\n        description: Invalid Request\n    401:\n        description: Unauthorized - Invalid credentials\n    500:\n        description: Internal Server Error","operationId":"make_favorite_api_v2_projects__project_id__favorite__post","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"integer","title":"Project Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["projects"],"summary":"Remove Favorite","description":"Unsets a project as favorite\n---\ntags:\n    - favorites\nproduces:\n    - application/json\nparameters:\n    - in: header\n      name: Authorization\n      description: Base64 encoded session token\n      required: true\n      type: string\n      default: Token sessionTokenHere==\n    - name: project_id\n      in: path\n      description: Unique project ID\n      required: true\n      type: integer\nresponses:\n    200:\n        description: New favorite created\n    400:\n        description: Invalid Request\n    401:\n        description: Unauthorized - Invalid credentials\n    500:\n        description: Internal Server Error","operationId":"remove_favorite_api_v2_projects__project_id__favorite__delete","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"integer","title":"Project Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/projects/partnerships/{partnership_id}/":{"get":{"tags":["projects"],"summary":"Retrieve Partnership","description":"Retrieves a Partnership by id\n---\ntags:\n    - projects\n    - partners\n    - partnerships\nproduces:\n    - application/json\nparameters:\n    - name: partnership_id\n        in: path\n        description: Unique partnership ID\n        required: true\n        type: integer\n        default: 1\nresponses:\n    200:\n        description: Partnership found\n    404:\n        description: Partnership not found\n    500:\n        description: Internal Server Error","operationId":"retrieve_partnership_api_v2_projects_partnerships__partnership_id___get","parameters":[{"name":"partnership_id","in":"path","required":true,"schema":{"type":"integer","title":"Partnership Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"patch":{"tags":["projects"],"summary":"Patch Partnership","description":"Update the time range for a partner project link\n---\ntags:\n    - projects\n    - partners\n    - partnerships\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Authorization\n        description: Base64 encoded session token\n        required: true\n        type: string\n        default: Token sessionTokenHere==\n    - name: partnership_id\n        in: path\n        description: Unique partnership ID\n        required: true\n        type: integer\n        default: 1\n    - in: body\n        name: body\n        required: true\n        description: JSON object for creating a partnership\n        schema:\n        properties:\n            startedOn:\n                type: date\n                description: The timestamp when the partner is added to a project. Defaults to current time.\n                default: \"2017-04-11T12:38:49\"\n            endedOn:\n                type: date\n                description: The timestamp when the partner ended their work on a project.\n                default: \"2018-04-11T12:38:49\"\nresponses:\n    201:\n        description: Partner project association created\n    400:\n        description: Ivalid dates or started_on was after ended_on\n    401:\n        description: Forbidden, if user is not a manager of this project\n    403:\n        description: Forbidden, if user is not authenticated\n    404:\n        description: Not found\n    500:\n        description: Internal Server Error","operationId":"patch_partnership_api_v2_projects_partnerships__partnership_id___patch","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"partnership_id","in":"path","required":true,"schema":{"type":"integer","title":"Partnership Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["projects"],"summary":"Delete Partnership","description":"Deletes a link between a project and a partner\n---\ntags:\n    - projects\n    - partners\n    - partnerships\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Authorization\n        description: Base64 encoded session token\n        required: true\n        type: string\n        default: Token sessionTokenHere==\n    - name: partnership_id\n        in: path\n        description: Unique partnership ID\n        required: true\n        type: integer\n        default: 1\nresponses:\n    201:\n        description: Partner project association created\n    401:\n        description: Forbidden, if user is not a manager of this project\n    403:\n        description: Forbidden, if user is not authenticated\n    404:\n        description: Not found\n    500:\n        description: Internal Server Error","operationId":"delete_partnership_api_v2_projects_partnerships__partnership_id___delete","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"partnership_id","in":"path","required":true,"schema":{"type":"integer","title":"Partnership Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/projects/partnerships/":{"post":{"tags":["projects"],"summary":"Create Partnership","description":"Assign a partner to a project\n---\ntags:\n    - projects\n    - partners\n    - partnerships\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Authorization\n        description: Base64 encoded session token\n        required: true\n        type: string\n        default: Token sessionTokenHere==\n    - in: body\n        name: body\n        required: true\n        description: JSON object for creating a partnership\n        schema:\n        properties:\n            projectId:\n                required: true\n                type: int\n                description: Unique project ID\n                default: 1\n            partnerId:\n                required: true\n                type: int\n                description: Unique partner ID\n                default: 1\n            startedOn:\n                type: date\n                description: The timestamp when the partner is added to a project. Defaults to current time.\n                default: \"2017-04-11T12:38:49\"\n            endedOn:\n                type: date\n                description: The timestamp when the partner ended their work on a project.\n                default: \"2018-04-11T12:38:49\"\nresponses:\n    201:\n        description: Partner project association created\n    400:\n        description: Ivalid dates or started_on was after ended_on\n    401:\n        description: Forbidden, if user is not a manager of this project\n    403:\n        description: Forbidden, if user is not authenticated\n    404:\n        description: Not found\n    500:\n        description: Internal Server Error","operationId":"create_partnership_api_v2_projects_partnerships__post","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"}},"security":[{"APIKeyHeader":[]}]}},"/api/v2/projects/{project_id}/partners/":{"get":{"tags":["projects"],"summary":"Get Partners","description":"Retrieves the list of partners associated with a project\n---\ntags:\n    - projects\n    - partners\n    - partnerships\nproduces:\n    - application/json\nparameters:\n    - name: project_id\n        in: path\n        description: Unique project ID\n        required: true\n        type: integer\n        default: 1\nresponses:\n    200:\n        description: List (possibly empty) of partners associated with this project_id\n    500:\n        description: Internal Server Error","operationId":"get_partners_api_v2_projects__project_id__partners__get","parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"integer","title":"Project Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/projects/{project_id}/comments/":{"post":{"tags":["projects"],"summary":"Post Comment","description":"Add a message to project chat\n---\ntags:\n    - comments\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Authorization\n        description: Base64 encoded session token\n        required: true\n        type: string\n        default: Token sessionTokenHere==\n    - name: project_id\n        in: path\n        description: Project ID to attach the chat message to\n        required: true\n        type: integer\n        default: 1\n    - in: body\n        name: body\n        required: true\n        description: JSON object for creating a new mapping license\n        schema:\n            properties:\n                message:\n                    type: string\n                    default: This is an awesome project\nresponses:\n    201:\n        description: Message posted successfully\n    400:\n        description: Invalid Request\n    500:\n        description: Internal Server Error","operationId":"post_comment_api_v2_projects__project_id__comments__post","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"integer","title":"Project Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"get":{"tags":["projects"],"summary":"Get Comments","description":"Get all chat messages for a project\n---\ntags:\n    - comments\nproduces:\n    - application/json\nparameters:\n    - name: project_id\n        in: path\n        description: Project ID to attach the chat message to\n        required: true\n        type: integer\n        default: 1\n    - in: query\n        name: page\n        description: Page of results user requested\n        type: integer\n        default: 1\n    - in: query\n        name: perPage\n        description: Number of elements per page.\n        type: integer\n        default: 20\nresponses:\n    200:\n        description: All messages\n    404:\n        description: No chat messages on project\n    500:\n        description: Internal Server Error","operationId":"get_comments_api_v2_projects__project_id__comments__get","parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"integer","title":"Project Id"}},{"name":"page","in":"query","required":false,"schema":{"type":"integer","description":"Page of results user requested","default":1,"title":"Page"},"description":"Page of results user requested"},{"name":"perPage","in":"query","required":false,"schema":{"type":"integer","description":"Number of elements per page","default":20,"title":"Perpage"},"description":"Number of elements per page"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/projects/{project_id}/comments/{comment_id}/":{"delete":{"tags":["projects"],"summary":"Delete Comment","description":"Delete a chat message\n---\ntags:\n  - comments\nproduces:\n  - application/json\nparameters:\n    - in: header\n      name: Authorization\n      description: Base64 encoded session token\n      required: true\n      type: string\n      default: Token sessionTokenHere==\n    - name: project_id\n      in: path\n      description: Project ID to attach the chat message to\n      required: true\n      type: integer\n      default: 1\n    - name: comment_id\n      in: path\n      description: Comment ID to delete\n      required: true\n      type: integer\n      default: 1\nresponses:\n    200:\n        description: Comment deleted\n    403:\n        description: User is not authorized to delete comment\n    404:\n        description: Comment not found\n    500:\n        description: Internal Server Error","operationId":"delete_comment_api_v2_projects__project_id__comments__comment_id___delete","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"integer","title":"Project Id"}},{"name":"comment_id","in":"path","required":true,"schema":{"type":"integer","title":"Comment Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/projects/{project_id}/comments/tasks/{task_id}/":{"post":{"tags":["projects"],"summary":"Post Task Comment","description":"Adds a comment to the task outside of mapping/validation\n---\ntags:\n    - comments\nproduces:\n    - application/json\nparameters:\n    - in: header\n      name: Authorization\n      description: Base64 encoded session token\n      required: true\n      type: string\n      default: Token sessionTokenHere==\n    - name: project_id\n      in: path\n      description: Project ID the task is associated with\n      required: true\n      type: integer\n      default: 1\n    - name: task_id\n      in: path\n      description: Unique task ID\n      required: true\n      type: integer\n      default: 1\n    - in: body\n      name: body\n      required: true\n      description: JSON object representing the comment\n      schema:\n        id: TaskComment\n        required:\n            - comment\n        properties:\n            comment:\n                type: string\n                description: user comment about the task\nresponses:\n    200:\n        description: Comment added\n    400:\n        description: Client Error\n    401:\n        description: Unauthorized - Invalid credentials\n    403:\n        description: Forbidden\n    404:\n        description: Task not found\n    500:\n        description: Internal Server Error","operationId":"post_task_comment_api_v2_projects__project_id__comments_tasks__task_id___post","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"integer","title":"Project Id"}},{"name":"task_id","in":"path","required":true,"schema":{"type":"integer","title":"Task Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"get":{"tags":["projects"],"summary":"Get Task Comments","description":"Get comments for a task\n---\ntags:\n    - comments\nproduces:\n    - application/json\nparameters:\n    - in: header\n      name: Authorization\n      description: Base64 encoded session token\n      required: true\n      type: string\n      default: Token sessionTokenHere==\n    - name: project_id\n      in: path\n      description: Project ID the task is associated with\n      required: true\n      type: integer\n      default: 1\n    - name: task_id\n      in: path\n      description: Unique task ID\n      required: true\n      type: integer\n      default: 1\n    - in: body\n      name: body\n      required: true\n      description: JSON object representing the comment\n      schema:\n        id: TaskComment\n        required:\n            - comment\n        properties:\n            comment:\n                type: string\n                description: user comment about the task\nresponses:\n    200:\n        description: Comment retrieved\n    400:\n        description: Client Error\n    404:\n        description: Task not found\n    500:\n        description: Internal Server Error","operationId":"get_task_comments_api_v2_projects__project_id__comments_tasks__task_id___get","parameters":[{"name":"project_id","in":"path","required":true,"schema":{"title":"Project Id"}},{"name":"task_id","in":"path","required":true,"schema":{"title":"Task Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/teams/{team_id}/":{"patch":{"tags":["teams"],"summary":"Update Team","description":"Updates a team\n---\ntags:\n    - teams\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Authorization\n        description: Base64 encoded session token\n        required: true\n        type: string\n        default: Token sessionTokenHere==\n    - name: team_id\n        in: path\n        description: The unique team ID\n        required: true\n        type: integer\n        default: 1\n    - in: body\n        name: body\n        required: true\n        description: JSON object for updating a team\n        schema:\n        properties:\n            name:\n                type: string\n                default: HOT - Mappers\n            logo:\n                type: string\n                default: https://tasks.hotosm.org/assets/img/hot-tm-logo.svg\n            members:\n                type: array\n                items:\n                    schema:\n                        $ref: \"#/definitions/TeamMembers\"\n            organisation:\n                type: string\n                default: HOT\n            description:\n                type: string\n                default: HOT's mapping editors\n            inviteOnly:\n                type: boolean\n                default: false\nresponses:\n    200:\n        description: Team updated successfully\n    400:\n        description: Client Error - Invalid Request\n    401:\n        description: Unauthorized - Invalid credentials\n    403:\n        description: Forbidden\n    500:\n        description: Internal Server Error","operationId":"update_team_api_v2_teams__team_id___patch","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"team_id","in":"path","required":true,"schema":{"type":"integer","title":"Team Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateTeamDTO"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"get":{"tags":["teams"],"summary":"Retrieve Team","description":"Retrieves a Team\n---\ntags:\n    - teams\nproduces:\n    - application/json\nparameters:\n    - name: team_id\n        in: path\n        description: Unique team ID\n        required: true\n        type: integer\n        default: 1\n    - in: query\n        name: omitMemberList\n        type: boolean\n        description: Set it to true if you don't want the members list on the response.\n        default: False\nresponses:\n    200:\n        description: Team found\n    401:\n        description: Unauthorized - Invalid credentials\n    404:\n        description: Team not found\n    500:\n        description: Internal Server Error","operationId":"retrieve_team_api_v2_teams__team_id___get","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"team_id","in":"path","required":true,"schema":{"type":"integer","title":"Team Id"}},{"name":"omitMemberList","in":"query","required":false,"schema":{"type":"boolean","description":"Set to true if you don't want the members list in the response","default":false,"title":"Omitmemberlist"},"description":"Set to true if you don't want the members list in the response"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["teams"],"summary":"Delete","description":"Deletes a Team\n---\ntags:\n    - teams\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Authorization\n        description: Base64 encoded session token\n        required: true\n        type: string\n        default: Token sessionTokenHere==\n    - name: team_id\n        in: path\n        description: The unique team ID\n        required: true\n        type: integer\n        default: 1\nresponses:\n    200:\n        description: Team deleted\n    401:\n        description: Unauthorized - Invalid credentials\n    403:\n        description: Forbidden - Team has associated projects\n    404:\n        description: Team not found\n    500:\n        description: Internal Server Error","operationId":"delete_api_v2_teams__team_id___delete","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"team_id","in":"path","required":true,"schema":{"type":"integer","title":"Team Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/teams/":{"get":{"tags":["teams"],"summary":"List Teams","description":"Gets all teams\n---\ntags:\n    - teams\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Authorization\n        description: Base64 encoded session token\n        required: true\n        type: string\n        default: Token sessionTokenHere==\n    - in: query\n        name: team_name\n        description: name of the team to filter by\n        type: str\n        default: null\n    - in: query\n        name: member\n        description: user ID to filter teams that the users belongs to, user must be active.\n        type: str\n        default: null\n    - in: query\n        name: manager\n        description: user ID to filter teams that the users has MANAGER role\n        type: str\n        default: null\n    - in: query\n        name: member_request\n        description: user ID to filter teams that the user has send invite request to\n        type: str\n        default: null\n    - in: query\n        name: team_role\n        description: team role for project\n        type: str\n        default: null\n    - in: query\n        name: organisation\n        description: organisation ID to filter teams\n        type: integer\n        default: null\n    - in: query\n        name: omitMemberList\n        type: boolean\n        description: Set it to true if you don't want the members list on the response.\n        default: False\n    - in: query\n        name: fullMemberList\n        type: boolean\n        description: Set it to true if you want full members list otherwise it will be limited to 10 per role.\n        default: True\n    - in: query\n        name: paginate\n        type: boolean\n        description: Set it to true if you want to paginate the results.\n        default: False\n    - in: query\n        name: page\n        type: integer\n        description: Page number to return.\n        default: 1\n    - in: query\n        name: perPage\n        type: integer\n        description: Number of results per page.\n        default: 10\n\nresponses:\n    201:\n        description: Team list returned successfully\n    400:\n        description: Client Error - Invalid Request\n    401:\n        description: Unauthorized - Invalid credentials\n    500:\n        description: Internal Server Error","operationId":"list_teams_api_v2_teams__get","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"team_name","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"description":"Name of the team to filter by","title":"Team Name"},"description":"Name of the team to filter by"},{"name":"member","in":"query","required":false,"schema":{"anyOf":[{"type":"integer"},{"type":"null"}],"description":"User ID to filter teams that the user belongs to, must be active","title":"Member"},"description":"User ID to filter teams that the user belongs to, must be active"},{"name":"manager","in":"query","required":false,"schema":{"anyOf":[{"type":"integer"},{"type":"null"}],"description":"User ID to filter teams where user has MANAGER role","title":"Manager"},"description":"User ID to filter teams where user has MANAGER role"},{"name":"member_request","in":"query","required":false,"schema":{"anyOf":[{"type":"integer"},{"type":"null"}],"description":"User ID to filter teams the user has sent invite request to","title":"Member Request"},"description":"User ID to filter teams the user has sent invite request to"},{"name":"team_role","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"description":"Team role for project","title":"Team Role"},"description":"Team role for project"},{"name":"organisation","in":"query","required":false,"schema":{"anyOf":[{"type":"integer"},{"type":"null"}],"description":"Organisation ID to filter teams","title":"Organisation"},"description":"Organisation ID to filter teams"},{"name":"omitMemberList","in":"query","required":false,"schema":{"type":"boolean","description":"Set to true to omit members list in the response","default":false,"title":"Omitmemberlist"},"description":"Set to true to omit members list in the response"},{"name":"fullMemberList","in":"query","required":false,"schema":{"type":"boolean","description":"Set to true to include full members list, else 10 per role","default":true,"title":"Fullmemberlist"},"description":"Set to true to include full members list, else 10 per role"},{"name":"paginate","in":"query","required":false,"schema":{"type":"boolean","description":"Set to true to paginate results","default":false,"title":"Paginate"},"description":"Set to true to paginate results"},{"name":"page","in":"query","required":false,"schema":{"type":"integer","description":"Page number to return","default":1,"title":"Page"},"description":"Page number to return"},{"name":"perPage","in":"query","required":false,"schema":{"type":"integer","description":"Number of results per page","default":10,"title":"Perpage"},"description":"Number of results per page"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"post":{"tags":["teams"],"summary":"Create Team","description":"Creates a new team\n---\ntags:\n    - teams\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Authorization\n        description: Base64 encoded session token\n        required: true\n        type: string\n        default: Token sessionTokenHere==\n    - in: body\n        name: body\n        required: true\n        description: JSON object for creating team\n        schema:\n        properties:\n            name:\n                type: string\n                default: HOT - Mappers\n            organisation_id:\n                type: integer\n                default: 1\n            description:\n                type: string\n            visibility:\n                type: string\n                enum:\n                - \"PUBLIC\"\n                - \"PRIVATE\"\n            joinMethod:\n                type: string\n                enum:\n                - \"ANY\"\n                - \"BY_REQUEST\"\n                - \"BY_INVITE\"\nresponses:\n    201:\n        description: Team created successfully\n    400:\n        description: Client Error - Invalid Request\n    401:\n        description: Unauthorized - Invalid credentials\n    403:\n        description: Unauthorized - Forbidden\n    500:\n        description: Internal Server Error","operationId":"create_team_api_v2_teams__post","security":[{"APIKeyHeader":[]}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/NewTeamDTO"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/teams/join_requests/":{"get":{"tags":["teams"],"summary":"Get Join Requests","description":"Downloads join requests for a specific team as a CSV.\n---\ntags:\n    - teams\nproduces:\n    - text/csv\nparameters:\n    - in: query\n      name: team_id\n      description: ID of the team to filter by\n      required: true\n      type: integer\nresponses:\n    200:\n        description: CSV file with inactive team members\n    400:\n        description: Missing or invalid parameters\n    401:\n        description: Unauthorized access\n    500:\n        description: Internal server error","operationId":"get_join_requests_api_v2_teams_join_requests__get","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"team_id","in":"query","required":true,"schema":{"type":"integer","description":"ID of the team to filter by","title":"Team Id"},"description":"ID of the team to filter by"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/teams/{team_id}/actions/join/":{"post":{"tags":["teams"],"summary":"Join Team","description":"Request to join a team\n---\ntags:\n    - teams\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Authorization\n        description: Base64 encoded session token\n        required: true\n        type: string\n        default: Token sessionTokenHere==\n    - name: team_id\n        in: path\n        description: Unique team ID\n        required: true\n        type: integer\n        default: 1\nresponses:\n    200:\n        description: Member added\n    403:\n        description: Forbidden\n    404:\n        description: Not found\n    500:\n        description: Internal Server Error","operationId":"join_team_api_v2_teams__team_id__actions_join__post","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"team_id","in":"path","required":true,"schema":{"type":"integer","title":"Team Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"patch":{"tags":["teams"],"summary":"Action Team Invite","description":"Take action on a team invite\n---\ntags:\n    - teams\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Authorization\n        description: Base64 encoded session token\n        required: true\n        type: string\n        default: Token sessionTokenHere==\n    - name: team_id\n        in: path\n        description: Unique team ID\n        required: true\n        type: integer\n        default: 1\n    - in: body\n        name: body\n        required: true\n        description: JSON object to accept or reject a request to join team\n        schema:\n        properties:\n            username:\n                type: string\n                required: true\n            type:\n                type: string\n                default: join-response\n                required: true\n            role:\n                type: string\n                default: member\n                required: false\n            action:\n                type: string\n                default: accept\n                required: true\nresponses:\n    200:\n        description: Member added\n    403:\n        description: Forbidden\n    404:\n        description: Not found\n    500:\n        description: Internal Server Error","operationId":"action_team_invite_api_v2_teams__team_id__actions_join__patch","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"team_id","in":"path","required":true,"schema":{"type":"integer","title":"Team Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","title":"Data"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/teams/{team_id}/actions/add/":{"post":{"tags":["teams"],"summary":"Add Team Member","description":"Add members to the team\n---\ntags:\n    - teams\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Authorization\n        description: Base64 encoded session token\n        required: true\n        type: string\n        default: Token sessionTokenHere==\n    - name: team_id\n        in: path\n        description: Unique team ID\n        required: true\n        type: integer\n        default: 1\n    - in: body\n        name: body\n        required: true\n        description: JSON object to join team\n        schema:\n        properties:\n            username:\n                type: string\n                required: true\n            role:\n                type: string\n                required: false\nresponses:\n    200:\n        description: Member added\n    403:\n        description: Forbidden\n    404:\n        description: Not found\n    500:\n        description: Internal Server Error","operationId":"add_team_member_api_v2_teams__team_id__actions_add__post","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"team_id","in":"path","required":true,"schema":{"type":"integer","title":"Team Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","title":"Data"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/teams/{team_id}/actions/leave/":{"post":{"tags":["teams"],"summary":"Leave Team","description":"Removes a user from a team\n---\ntags:\n  - teams\nproduces:\n  - application/json\nparameters:\n    - in: header\n      name: Authorization\n      description: Base64 encoded session token\n      required: true\n      type: string\n      default: Token sessionTokenHere==\n    - name: team_id\n      in: path\n      description: Unique team ID\n      required: true\n      type: integer\n      default: 1\n    - in: body\n      name: body\n      required: true\n      description: JSON object to remove user from team\n      schema:\n        properties:\n            username:\n                type: string\n                default: 1\n                required: true\nresponses:\n    200:\n        description: Member deleted\n    403:\n        description: Forbidden, if user attempting to ready other messages\n    404:\n        description: Not found\n    500:\n        description: Internal Server Error","operationId":"leave_team_api_v2_teams__team_id__actions_leave__post","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"team_id","in":"path","required":true,"schema":{"type":"integer","title":"Team Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","title":"Data"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/teams/{team_id}/actions/message-members/":{"post":{"tags":["teams"],"summary":"Message Team","description":"Message all team members\n---\ntags:\n    - teams\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Authorization\n        description: Base64 encoded session token\n        required: true\n        type: string\n        default: Token sessionTokenHere==\n    - name: team_id\n        in: path\n        description: Unique team ID\n        required: true\n        type: integer\n        default: 1\n    - in: body\n        name: body\n        required: true\n        description: JSON object for creating message\n        schema:\n        properties:\n            subject:\n                type: string\n                default: Thanks\n                required: true\n            message:\n                type: string\n                default: Thanks for your contribution\n                required: true\nresponses:\n    200:\n        description: Message sent successfully\n    401:\n        description: Unauthorized - Invalid credentials\n    403:\n        description: Forbidden\n    500:\n        description: Internal Server Error","operationId":"message_team_api_v2_teams__team_id__actions_message_members__post","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"team_id","in":"path","required":true,"schema":{"type":"integer","title":"Team Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/countries/":{"get":{"tags":["countries"],"summary":"Get All Countries","description":"Fetch all Country tags\n---\ntags:\n  - countries\nproduces:\n  - application/json\nresponses:\n    200:\n        description: All Country tags returned\n    500:\n        description: Internal Server Error","operationId":"get_all_countries_api_v2_countries__get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TagsDTO"}}}},"404":{"description":"Not found"}}}},"/api/v2/campaigns/{campaign_id}/":{"get":{"tags":["campaigns"],"summary":"Retrieve Campaign","description":"Get an active campaign's information\n---\ntags:\n    - campaigns\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Authorization\n        description: Base64 encoded session token\n        type: string\n        default: Token sessionTokenHere==\n    - in: header\n        name: Accept-Language\n        description: Language user is requesting\n        type: string\n        required: true\n        default: en\n    - name: campaign_id\n        in: path\n        description: Campaign ID\n        required: true\n        type: integer\n        default: 1\nresponses:\n    200:\n        description: Campaign found\n    404:\n        description: No Campaign found\n    500:\n        description: Internal Server Error","operationId":"retrieve_campaign_api_v2_campaigns__campaign_id___get","parameters":[{"name":"campaign_id","in":"path","required":true,"schema":{"type":"integer","title":"Campaign Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CampaignDTO-Output"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"patch":{"tags":["campaigns"],"summary":"Update Campaign","description":"Updates an existing campaign\n---\ntags:\n    - campaigns\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Authorization\n        description: Base64 encoded session token\n        type: string\n        required: true\n        default: Token sessionTokenHere==\n    - in: header\n        name: Accept-Language\n        description: Language user is requesting\n        type: string\n        required: true\n        default: en\n    - name: campaign_id\n        in: path\n        description: Campaign ID\n        required: true\n        type: integer\n        default: 1\n    - in: body\n        name: body\n        required: true\n        description: JSON object for updating a Campaign\n        schema:\n        properties:\n            name:\n                type: string\n                example: HOT Campaign\n            logo:\n                type: string\n                example: https://tasks.hotosm.org/assets/img/hot-tm-logo.svg\n            url:\n                type: string\n                example: https://hotosm.org\n            organisations:\n                type: array\n                items:\n                    type: integer\n                default: [\n                    1\n                ]\nresponses:\n    200:\n        description: Campaign updated successfully\n    401:\n        description: Unauthorized - Invalid credentials\n    403:\n        description: Forbidden\n    404:\n        description: Campaign not found\n    409:\n        description: Resource duplication\n    500:\n        description: Internal Server Error","operationId":"update_campaign_api_v2_campaigns__campaign_id___patch","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"campaign_id","in":"path","required":true,"schema":{"type":"integer","title":"Campaign Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CampaignDTO-Input"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["campaigns"],"summary":"Delete Campaign","description":"Deletes an existing campaign\n---\ntags:\n    - campaigns\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Authorization\n        description: Base64 encoded session token\n        type: string\n        required: true\n        default: Token sessionTokenHere==\n    - in: header\n        name: Accept-Language\n        description: Language user is requesting\n        type: string\n        required: true\n        default: en\n    - name: campaign_id\n        in: path\n        description: Campaign ID\n        required: true\n        type: integer\n        default: 1\nresponses:\n    200:\n        description: Campaign deleted successfully\n    401:\n        description: Unauthorized - Invalid credentials\n    403:\n        description: Forbidden\n    404:\n        description: Campaign not found\n    500:\n        description: Internal Server Error","operationId":"delete_campaign_api_v2_campaigns__campaign_id___delete","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"campaign_id","in":"path","required":true,"schema":{"type":"integer","title":"Campaign Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/campaigns/":{"get":{"tags":["campaigns"],"summary":"List Campaigns","description":"Get all active campaigns\n---\ntags:\n    - campaigns\nproduces:\n    - application/json\nresponses:\n    200:\n        description: All Campaigns returned successfully\n    500:\n        description: Internal Server Error","operationId":"list_campaigns_api_v2_campaigns__get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CampaignListDTO"}}}},"404":{"description":"Not found"}}},"post":{"tags":["campaigns"],"summary":"Create Campaign","description":"Creates a new campaign\n---\ntags:\n    - campaigns\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Authorization\n        description: Base64 encoded session token\n        type: string\n        required: true\n        default: Token sessionTokenHere==\n    - in: header\n        name: Accept-Language\n        description: Language user is requesting\n        type: string\n        required: true\n        default: en\n    - in: body\n        name: body\n        required: true\n        description: JSON object for creating a new Campaign\n        schema:\n        properties:\n            name:\n                type: string\n                example: HOT Campaign\n            logo:\n                type: string\n                example: https://tasks.hotosm.org/assets/img/hot-tm-logo.svg\n            url:\n                type: string\n                example: https://hotosm.org\n            organisations:\n                type: array\n                items:\n                    type: integer\n                default: [\n                    1\n                ]\nresponses:\n    201:\n        description: New campaign created successfully\n    401:\n        description: Unauthorized - Invalid credentials\n    403:\n        description: Forbidden\n    409:\n        description: Resource duplication\n    500:\n        description: Internal Server Error","operationId":"create_campaign_api_v2_campaigns__post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/NewCampaignDTO"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"APIKeyHeader":[]}]}},"/api/v2/projects/{project_id}/annotations/":{"get":{"tags":["projects"],"summary":"Get Annotations","description":"Get all task annotations for a project\n---\ntags:\n    - annotations\nproduces:\n    - application/json\nparameters:\n    - name: project_id\n      in: path\n      description: The ID of the project\n      required: true\n      type: integer\n    - name: annotation_type\n      in: path\n      description: The type of annotation to fetch\n      required: false\n      type: integer\nresponses:\n    200:\n        description: Project Annotations\n    404:\n        description: Project or annotations not found\n    500:\n        description: Internal Server Error","operationId":"get_annotations_api_v2_projects__project_id__annotations__get","parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"integer","title":"Project Id"}},{"name":"annotation_type","in":"query","required":false,"schema":{"type":"string","title":"Annotation Type"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/projects/{project_id}/annotations/{annotation_type}/":{"get":{"tags":["projects"],"summary":"Get Annotations","description":"Get all task annotations for a project\n---\ntags:\n    - annotations\nproduces:\n    - application/json\nparameters:\n    - name: project_id\n      in: path\n      description: The ID of the project\n      required: true\n      type: integer\n    - name: annotation_type\n      in: path\n      description: The type of annotation to fetch\n      required: false\n      type: integer\nresponses:\n    200:\n        description: Project Annotations\n    404:\n        description: Project or annotations not found\n    500:\n        description: Internal Server Error","operationId":"get_annotations_api_v2_projects__project_id__annotations__annotation_type___get","parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"integer","title":"Project Id"}},{"name":"annotation_type","in":"path","required":true,"schema":{"type":"string","title":"Annotation Type"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"post":{"tags":["projects"],"summary":"Post Annotations","description":"Store new task annotations for tasks of a project\n---\ntags:\n    - annotations\nproduces:\n    - application/json\nparameters:\n    - in: header\n      name: Content-Type\n      description: Content type for post body\n      required: true\n      type: string\n      default: application/json\n    - name: project_id\n      in: path\n      description: Unique project ID\n      required: true\n      type: integer\n    - name: annotation_type\n      in: path\n      description: Annotation type\n      required: true\n      type: string\n    - name: Application-Token\n      in: header\n      description: Application token registered with TM\n      required: true\n      type: string\n    - in: body\n      name: body\n      required: true\n      description: JSON object for creating draft project\n      schema:\n        projectId:\n            type: integer\n            required: true\n        annotationType:\n            type: string\n            required: true\n        tasks:\n            type: array\n            required: true\n            items:\n                schema:\n                    taskId:\n                        type: integer\n                        required: true\n                    annotationSource:\n                        type: string\n                    annotationMarkdown:\n                        type: string\n                    properties:\n                        description: JSON object with properties\nresponses:\n    200:\n        description: Project updated\n    400:\n        description: Client Error - Invalid Request\n    404:\n        description: Project or task not found\n    500:\n        description: Internal Server Error","operationId":"post_annotations_api_v2_projects__project_id__annotations__annotation_type___post","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"integer","title":"Project Id"}},{"name":"annotation_type","in":"path","required":true,"schema":{"type":"string","title":"Annotation Type"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/interests/":{"get":{"tags":["interests"],"summary":"Get Interests","description":"Get all interests\n---\ntags:\n    - interests\nproduces:\n    - application/json\nresponses:\n    200:\n        description: List of interests\n    500:\n        description: Internal Server Error","operationId":"get_interests_api_v2_interests__get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"}}},"post":{"tags":["interests"],"summary":"Post Interest","description":"Creates a new interest\n---\ntags:\n    - interests\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Authorization\n        description: Base64 encoded session token\n        required: true\n        type: string\n        default: Token sessionTokenHere==\n    - in: body\n        name: body\n        required: true\n        description: JSON object for creating a new interest\n        schema:\n            properties:\n                name:\n                    type: string\n                    default: Public Domain\nresponses:\n    200:\n        description: New interest created\n    400:\n        description: Invalid Request\n    401:\n        description: Unauthorized - Invalid credentials\n    403:\n        description: Forbidden\n    500:\n        description: Internal Server Error","operationId":"post_interest_api_v2_interests__post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/InterestDTO"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"APIKeyHeader":[]}]}},"/api/v2/interests/{interest_id}/":{"get":{"tags":["interests"],"summary":"Retrieve Interest","description":"Get an existing interest\n---\ntags:\n    - interests\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Authorization\n        description: Base64 encoded session token\n        required: true\n        type: string\n        default: Token sessionTokenHere==\n    - name: interest_id\n        in: path\n        description: Interest ID\n        required: true\n        type: integer\n        default: 1\nresponses:\n    200:\n        description: Interest\n    400:\n        description: Invalid Request\n    401:\n        description: Unauthorized - Invalid credentials\n    403:\n        description: Forbidden\n    404:\n        description: Interest not found\n    500:\n        description: Internal Server Error","operationId":"retrieve_interest_api_v2_interests__interest_id___get","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"interest_id","in":"path","required":true,"schema":{"type":"integer","title":"Interest Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"patch":{"tags":["interests"],"summary":"Patch Interest","description":"Update an existing interest\n---\ntags:\n    - interests\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Authorization\n        description: Base64 encoded session token\n        required: true\n        type: string\n        default: Token sessionTokenHere==\n    - name: interest_id\n        in: path\n        description: Interest ID\n        required: true\n        type: integer\n        default: 1\n    - in: body\n        name: body\n        required: true\n        description: JSON object for creating a new interest\n        schema:\n            properties:\n                name:\n                    type: string\n                    default: Public Domain\nresponses:\n    200:\n        description: Interest updated\n    400:\n        description: Invalid Request\n    401:\n        description: Unauthorized - Invalid credentials\n    403:\n        description: Forbidden\n    404:\n        description: Interest not found\n    500:\n        description: Internal Server Error","operationId":"patch_interest_api_v2_interests__interest_id___patch","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"interest_id","in":"path","required":true,"schema":{"type":"integer","title":"Interest Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/InterestDTO"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["interests"],"summary":"Delete Interest","description":"Delete a specified interest\n---\ntags:\n    - interests\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Authorization\n        description: Base64 encoded session token\n        required: true\n        type: string\n        default: Token sessionTokenHere==\n    - name: interest_id\n        in: path\n        description: Unique interest ID\n        required: true\n        type: integer\n        default: 1\nresponses:\n    200:\n        description: Interest deleted\n    401:\n        description: Unauthorized - Invalid credentials\n    403:\n        description: Forbidden\n    404:\n        description: Interest not found\n    500:\n        description: Internal Server Error","operationId":"delete_interest_api_v2_interests__interest_id___delete","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"interest_id","in":"path","required":true,"schema":{"type":"integer","title":"Interest Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/users/{username}/statistics/":{"get":{"tags":["users"],"summary":"Get User Stats","description":"Get detailed stats about a user by OpenStreetMap username\n---\ntags:\n    - users\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Authorization\n        description: Base64 encoded session token\n        required: true\n        type: string\n        default: Token sessionTokenHere==\n    - name: username\n        in: path\n        description: Mapper's OpenStreetMap username\n        required: true\n        type: string\n        default: Thinkwhere\nresponses:\n    200:\n        description: User found\n    401:\n        description: Unauthorized - Invalid credentials\n    404:\n        description: User not found\n    500:\n        description: Internal Server Error","operationId":"get_user_stats_api_v2_users__username__statistics__get","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"username","in":"path","required":true,"schema":{"type":"string","title":"Username"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/users/{user_id}/statistics/interests/":{"get":{"tags":["users"],"summary":"Get User Interests Statistics","description":"Get rate of contributions from a user given their interests\n---\ntags:\n    - interests\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Authorization\n        description: Base64 encoded session token\n        required: true\n        type: string\n        default: Token sessionTokenHere==\n    - name: user_id\n        in: path\n        description: User ID\n        required: true\n        type: integer\nresponses:\n    200:\n        description: Interest found\n    401:\n        description: Unauthorized - Invalid credentials\n    500:\n        description: Internal Server Error","operationId":"get_user_interests_statistics_api_v2_users__user_id__statistics_interests__get","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"user_id","in":"path","required":true,"schema":{"type":"integer","title":"User Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/users/statistics/":{"get":{"tags":["users"],"summary":"Get Period User Stats","description":"Get stats about users registered within a period of time\n---\ntags:\n    - users\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Authorization\n        description: Base64 encoded session token\n        type: string\n        required: true\n        default: Token sessionTokenHere==\n    - in: query\n        name: startDate\n        description: Initial date\n        required: true\n        type: string\n    - in: query\n        name: endDate\n        description: Final date.\n        type: string\nresponses:\n    200:\n        description: User statistics\n    400:\n        description: Bad Request\n    401:\n        description: Request is not authenticated\n    500:\n        description: Internal Server Error","operationId":"get_period_user_stats_api_v2_users_statistics__get","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"startDate","in":"query","required":true,"schema":{"type":"string","description":"Initial date (e.g., YYYY-MM-DD)","title":"Startdate"},"description":"Initial date (e.g., YYYY-MM-DD)"},{"name":"endDate","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"description":"Final date (e.g., YYYY-MM-DD)","title":"Enddate"},"description":"Final date (e.g., YYYY-MM-DD)"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/users/statistics/ohsome/":{"get":{"tags":["users"],"summary":"Get Ohsome Stats","description":"Get OHSOME stats for a given user and topics.","operationId":"get_ohsome_stats_api_v2_users_statistics_ohsome__get","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"userId","in":"query","required":true,"schema":{"type":"integer","description":"OSM user ID","title":"Userid"},"description":"OSM user ID"},{"name":"topics","in":"query","required":true,"schema":{"type":"string","description":"Comma-separated list of OSM topics, e.g. building,highway","title":"Topics"},"description":"Comma-separated list of OSM topics, e.g. building,highway"},{"name":"startdate","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"description":"YYYY-MM-DD, start of time range","title":"Startdate"},"description":"YYYY-MM-DD, start of time range"},{"name":"enddate","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"description":"YYYY-MM-DD, end of time range","title":"Enddate"},"description":"YYYY-MM-DD, end of time range"},{"name":"hashtag","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"description":"Filter by hashtag","title":"Hashtag"},"description":"Filter by hashtag"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/users/{user_id}/":{"get":{"tags":["users"],"summary":"Get User","description":"Get user information by id\n---\ntags:\n  - users\nproduces:\n  - application/json\nparameters:\n    - in: header\n      name: Authorization\n      description: Base64 encoded session token\n      required: true\n      type: string\n      default: Token sessionTokenHere==\n    - name: user_id\n      in: path\n      description: The id of the user\n      required: true\n      type: integer\n      default: 1\nresponses:\n    200:\n        description: User found\n    401:\n        description: Unauthorized - Invalid credentials\n    404:\n        description: User not found\n    500:\n        description: Internal Server Error","operationId":"get_user_api_v2_users__user_id___get","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"user_id","in":"path","required":true,"schema":{"type":"integer","title":"User Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/users/":{"get":{"tags":["users"],"summary":"List Users","description":"Get paged list of all usernames\n---\ntags:\n  - users\nproduces:\n  - application/json\nparameters:\n    - in: header\n      name: Authorization\n      description: Base64 encoded sesesion token\n      required: true\n      type: string\n      default: Token sessionTokenHere==\n    - in: query\n      name: page\n      description: Page of results user requested\n      type: integer\n    - in: query\n      name: pagination\n      description: Whether to return paginated results\n      type: boolean\n      default: true\n    - in: query\n      name: per_page\n      description: Number of results per page\n      type: integer\n      default: 20\n    - in: query\n      name: username\n      description: Full or part username\n      type: string\n    - in: query\n      name: role\n      description: Role of User, eg ADMIN, PROJECT_MANAGER\n      type: string\n    - in: query\n      name: level\n      description: Level of User, eg BEGINNER\n      type: string\nresponses:\n    200:\n        description: Users found\n    401:\n        description: Unauthorized - Invalid credentials\n    500:\n        description: Internal Server Error","operationId":"list_users_api_v2_users__get","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"page","in":"query","required":false,"schema":{"type":"integer","description":"Page of results user requested","default":1,"title":"Page"},"description":"Page of results user requested"},{"name":"pagination","in":"query","required":false,"schema":{"type":"boolean","description":"Whether to return paginated results","default":true,"title":"Pagination"},"description":"Whether to return paginated results"},{"name":"perPage","in":"query","required":false,"schema":{"type":"integer","description":"Number of results per page","default":20,"title":"Perpage"},"description":"Number of results per page"},{"name":"username","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"description":"Full or part username","title":"Username"},"description":"Full or part username"},{"name":"role","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"description":"Role of User, e.g. ADMIN, PROJECT_MANAGER","title":"Role"},"description":"Role of User, e.g. ADMIN, PROJECT_MANAGER"},{"name":"level","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"description":"Level of User, e.g. BEGINNER","title":"Level"},"description":"Level of User, e.g. BEGINNER"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/users/queries/favorites/":{"get":{"tags":["users"],"summary":"Get User Favorite Projects","description":"Get projects favorited by a user\n---\ntags:\n  - favorites\nproduces:\n  - application/json\nparameters:\n    - in: header\n      name: Authorization\n      description: Base64 encoded session token\n      required: true\n      type: string\n      default: Token sessionTokenHere==\nresponses:\n    200:\n        description: Projects favorited by user\n    404:\n        description: User not found\n    500:\n        description: Internal Server Error","operationId":"get_user_favorite_projects_api_v2_users_queries_favorites__get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"}},"security":[{"APIKeyHeader":[]}]}},"/api/v2/users/queries/{username}/":{"get":{"tags":["users"],"summary":"Get Osm User Info","description":"Get user information by OpenStreetMap username\n---\ntags:\n  - users\nproduces:\n  - application/json\nparameters:\n    - in: header\n      name: Authorization\n      description: Base64 encoded session token\n      required: true\n      type: string\n      default: Token sessionTokenHere==\n    - name: username\n      in: path\n      description: Mapper's OpenStreetMap username\n      required: true\n      type: string\n      default: Thinkwhere\nresponses:\n    200:\n        description: User found\n    401:\n        description: Unauthorized - Invalid credentials\n    404:\n        description: User not found\n    500:\n        description: Internal Server Error","operationId":"get_osm_user_info_api_v2_users_queries__username___get","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"username","in":"path","required":true,"schema":{"type":"string","title":"Username"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/users/queries/filter/{username}/":{"get":{"tags":["users"],"summary":"Get Paginated Osm User Info","description":"Get paged lists of users matching OpenStreetMap username filter\n---\ntags:\n  - users\nproduces:\n  - application/json\nparameters:\n    - in: header\n      name: Authorization\n      description: Base64 encoded session token\n      required: true\n      type: string\n      default: Token sessionTokenHere==\n    - name: username\n      in: path\n      description: Mapper's partial or full OpenStreetMap username\n      type: string\n      default: ab\n    - in: query\n      name: page\n      description: Page of results user requested\n      type: integer\n    - in: query\n      name: projectId\n      description: Optional, promote project participants to head of results\n      type: integer\nresponses:\n    200:\n        description: Users found\n    401:\n        description: Unauthorized - Invalid credentials\n    404:\n        description: User not found\n    500:\n        description: Internal Server Error","operationId":"get_paginated_osm_user_info_api_v2_users_queries_filter__username___get","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"username","in":"path","required":true,"schema":{"type":"string","description":"Mapper's partial or full OpenStreetMap username","title":"Username"},"description":"Mapper's partial or full OpenStreetMap username"},{"name":"page","in":"query","required":false,"schema":{"type":"integer","description":"Page of results user requested","default":1,"title":"Page"},"description":"Page of results user requested"},{"name":"projectId","in":"query","required":false,"schema":{"anyOf":[{"type":"integer"},{"type":"null"}],"description":"Optional, promote project participants to head of results","title":"Projectid"},"description":"Optional, promote project participants to head of results"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/users/queries/tasks/locked/":{"get":{"tags":["users"],"summary":"Get Task Locked By User","description":"Gets any locked task on the project for the logged in user\n---\ntags:\n    - mapping\nproduces:\n    - application/json\nparameters:\n    - in: header\n      name: Authorization\n      description: Base64 encoded session token\n      required: true\n      type: string\n      default: Token sessionTokenHere==\nresponses:\n    200:\n        description: Task user is working on\n    401:\n        description: Unauthorized - Invalid credentials\n    404:\n        description: User is not working on any tasks\n    500:\n        description: Internal Server Error","operationId":"get_task_locked_by_user_api_v2_users_queries_tasks_locked__get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"}},"security":[{"APIKeyHeader":[]}]}},"/api/v2/users/queries/tasks/locked/details/":{"get":{"tags":["users"],"summary":"Get Task Details Locked By User","description":"Gets details of any locked task for the logged in user\n---\ntags:\n    - mapping\nproduces:\n    - application/json\nparameters:\n    - in: header\n      name: Authorization\n      description: Base64 encoded session token\n      required: true\n      type: string\n      default: Token sessionTokenHere==\n    - in: header\n      name: Accept-Language\n      description: Language user is requesting\n      type: string\n      required: true\n      default: en\nresponses:\n    200:\n        description: Task user is working on\n    401:\n        description: Unauthorized - Invalid credentials\n    404:\n        description: User is not working on any tasks\n    500:\n        description: Internal Server Error","operationId":"get_task_details_locked_by_user_api_v2_users_queries_tasks_locked_details__get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"}},"security":[{"APIKeyHeader":[]}]}},"/api/v2/users/{username}/queries/interests/":{"get":{"tags":["users"],"summary":"Get User Interests","description":"Get interests by username\n---\ntags:\n  - interests\nproduces:\n  - application/json\nparameters:\n    - in: header\n      name: Authorization\n      description: Base64 encoded session token\n      required: true\n      type: string\n      default: Token sessionTokenHere==\n    - name: username\n      in: path\n      description: Mapper's OpenStreetMap username\n      required: true\n      type: string\nresponses:\n    200:\n        description: User interests returned\n    404:\n        description: User not found\n    500:\n        description: Internal Server Error","operationId":"get_user_interests_api_v2_users__username__queries_interests__get","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"username","in":"path","required":true,"schema":{"type":"string","title":"Username"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/users/{username}/recommended-projects/":{"get":{"tags":["users"],"summary":"Get Recommended Projects","description":"Get recommended projects for a user\n---\ntags:\n  - users\nproduces:\n  - application/json\nparameters:\n    - in: header\n      name: Accept-Language\n      description: Language user is requesting\n      type: string\n      required: true\n      default: en\n    - in: header\n      name: Authorization\n      description: Base64 encoded session token\n      required: true\n      type: string\n      default: Token sessionTokenHere==\n    - name: username\n      in: path\n      description: Mapper's OpenStreetMap username\n      required: true\n      type: string\n      default: Thinkwhere\nresponses:\n    200:\n        description: Recommended projects found\n    401:\n        description: Unauthorized - Invalid credentials\n    403:\n        description: Forbidden\n    404:\n        description: No recommended projects found\n    500:\n        description: Internal Server Error","operationId":"get_recommended_projects_api_v2_users__username__recommended_projects__get","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"username","in":"path","required":true,"schema":{"title":"Username"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/users/{username}/openstreetmap/":{"get":{"tags":["users"],"summary":"Get Osm Details","description":"Get details from OpenStreetMap for a specified username\n---\ntags:\n  - users\nproduces:\n  - application/json\nparameters:\n    - in: header\n      name: Authorization\n      description: Base64 encoded sesesion token\n      required: true\n      type: string\n      default: Token sessionTokenHere==\n    - name: username\n      in: path\n      description: Mapper's OpenStreetMap username\n      required: true\n      type: string\n      default: Thinkwhere\nresponses:\n    200:\n        description: User found\n    401:\n        description: Unauthorized - Invalid credentials\n    404:\n        description: User not found\n    500:\n        description: Internal Server Error\n    502:\n        description: Bad response from OSM","operationId":"get_osm_details_api_v2_users__username__openstreetmap__get","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"username","in":"path","required":true,"schema":{"type":"string","title":"Username"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/users/{user_id}/tasks/":{"get":{"tags":["users"],"summary":"Get User Tasks","description":"Get a list of tasks a user has interacted with\n---\ntags:\n  - users\nproduces:\n  - application/json\nparameters:\n    - in: header\n      name: Authorization\n      description: Base64 encoded session token\n      required: true\n      type: string\n      default: Token sessionTokenHere==\n    - name: user_id\n      in: path\n      description: Mapper's OpenStreetMap ID\n      required: true\n      type: integer\n    - in: query\n      name: status\n      description: Task Status filter\n      required: false\n      type: string\n      default: null\n    - in: query\n      name: project_status\n      description: Project Status filter\n      required: false\n      type: string\n      default: null\n    - in: query\n      name: project_id\n      description: Project id\n      required: false\n      type: integer\n      default: null\n    - in: query\n      name: start_date\n      description: Date to filter as minimum\n      required: false\n      type: string\n      default: null\n    - in: query\n      name: end_date\n      description: Date to filter as maximum\n      required: false\n      type: string\n      default: null\n    - in: query\n      name: sort_by\n      description:\n            criteria to sort by. The supported options are action_date, -action_date, project_id, -project_id.\n            The default value is -action_date.\n      required: false\n      type: string\n    - in: query\n      name: page\n      description: Page of results user requested\n      type: integer\n    - in: query\n      name: page_size\n      description: Size of page, defaults to 10\n      type: integer\nresponses:\n    200:\n        description: Mapped projects found\n    404:\n        description: No mapped projects found\n    500:\n        description: Internal Server Error","operationId":"get_user_tasks_api_v2_users__user_id__tasks__get","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"user_id","in":"path","required":true,"schema":{"type":"integer","description":"Mapper's OpenStreetMap ID","title":"User Id"},"description":"Mapper's OpenStreetMap ID"},{"name":"status","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"description":"Task Status filter","title":"Status"},"description":"Task Status filter"},{"name":"project_status","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"description":"Project Status filter","title":"Project Status"},"description":"Project Status filter"},{"name":"project_id","in":"query","required":false,"schema":{"anyOf":[{"type":"integer"},{"type":"null"}],"description":"Project ID","title":"Project Id"},"description":"Project ID"},{"name":"start_date","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"description":"Date to filter as minimum (ISO format)","title":"Start Date"},"description":"Date to filter as minimum (ISO format)"},{"name":"end_date","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"description":"Date to filter as maximum (ISO format)","title":"End Date"},"description":"Date to filter as maximum (ISO format)"},{"name":"sort_by","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"description":"Sort criteria. Options: action_date, -action_date, project_id, -project_id","default":"-action_date","title":"Sort By"},"description":"Sort criteria. Options: action_date, -action_date, project_id, -project_id"},{"name":"page","in":"query","required":false,"schema":{"type":"integer","description":"Page number","default":1,"title":"Page"},"description":"Page number"},{"name":"page_size","in":"query","required":false,"schema":{"type":"integer","description":"Page size","default":10,"title":"Page Size"},"description":"Page size"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/users/me/actions/set-user/":{"patch":{"tags":["users"],"summary":"Update User","description":"Updates user info\n---\ntags:\n  - users\nproduces:\n  - application/json\nparameters:\n    - in: header\n      name: Authorization\n      description: Base64 encoded session token\n      required: true\n      type: string\n      default: Token sessionTokenHere==\n    - in: body\n      name: body\n      required: true\n      description: JSON object to update a user\n      schema:\n          properties:\n              id:\n                type: integer\n                example: 1\n              name:\n                  type: string\n                  example: Your Name\n              city:\n                  type: string\n                  example: Your City\n              country:\n                  type: string\n                  example: Your Country\n              emailAddress:\n                  type: string\n                  example: test@test.com\n              twitterId:\n                  type: string\n                  example: twitter handle without @\n              facebookId:\n                  type: string\n                  example: facebook username\n              linkedinId:\n                  type: string\n                  example: linkedin username\n              gender:\n                  type: string\n                  description: gender\n              selfDescriptionGender:\n                  type: string\n                  description: gender self-description\nresponses:\n    200:\n        description: Details saved\n    400:\n        description: Client Error - Invalid Request\n    401:\n        description: Unauthorized - Invalid credentials\n    500:\n        description: Internal Server Error","operationId":"update_user_api_v2_users_me_actions_set_user__patch","requestBody":{"content":{"application/json":{"schema":{"type":"object","title":"Data"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"APIKeyHeader":[]}]}},"/api/v2/users/{username}/actions/set-level/{level}/":{"patch":{"tags":["users"],"summary":"Set Mapping Level","description":"Allows PMs to set a user's mapping level\n---\ntags:\n    - users\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Authorization\n        description: Base64 encoded session token\n        required: true\n        type: string\n        default: Token sessionTokenHere==\n    - name: username\n        in: path\n        description: Mapper's OpenStreetMap username\n        required: true\n        type: string\n        default: Thinkwhere\n    - name: level\n        in: path\n        description: The mapping level that should be set\n        required: true\n        type: string\n        default: ADVANCED\nresponses:\n    200:\n        description: Level set\n    400:\n        description: Bad Request - Client Error\n    401:\n        description: Unauthorized - Invalid credentials\n    404:\n        description: User not found\n    500:\n        description: Internal Server Error","operationId":"set_mapping_level_api_v2_users__username__actions_set_level__level___patch","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"username","in":"path","required":true,"schema":{"title":"Username"}},{"name":"level","in":"path","required":true,"schema":{"title":"Level"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/users/{username}/actions/set-role/{role}/":{"patch":{"tags":["users"],"summary":"Set User Role","description":"Allows PMs to set a user's role\n---\ntags:\n  - users\nproduces:\n  - application/json\nparameters:\n    - in: header\n      name: Authorization\n      description: Base64 encoded session token\n      required: true\n      type: string\n      default: Token sessionTokenHere==\n    - name: username\n      in: path\n      description: Mapper's OpenStreetMap username\n      required: true\n      type: string\n      default: Thinkwhere\n    - name: role\n      in: path\n      description: The role to add\n      required: true\n      type: string\n      default: ADMIN\nresponses:\n    200:\n        description: Role set\n    401:\n        description: Unauthorized - Invalid credentials\n    403:\n        description: Forbidden\n    404:\n        description: User not found\n    500:\n        description: Internal Server Error","operationId":"set_user_role_api_v2_users__username__actions_set_role__role___patch","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"username","in":"path","required":true,"schema":{"type":"string","title":"Username"}},{"name":"role","in":"path","required":true,"schema":{"type":"string","title":"Role"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/users/{user_name}/actions/set-expert-mode/{is_expert}/":{"patch":{"tags":["users"],"summary":"Set User Is Expert","description":"Allows user to enable or disable expert mode\n---\ntags:\n  - users\nproduces:\n  - application/json\nparameters:\n    - in: header\n      name: Authorization\n      description: Base64 encoded session token\n      required: true\n      type: string\n      default: Token sessionTokenHere==\n    - name: is_expert\n      in: path\n      description: true to enable expert mode, false to disable\n      required: true\n      type: string\nresponses:\n    200:\n        description: Mode set\n    400:\n        description: Bad Request - Client Error\n    401:\n        description: Unauthorized - Invalid credentials\n    404:\n        description: User not found\n    500:\n        description: Internal Server Error","operationId":"set_user_is_expert_api_v2_users__user_name__actions_set_expert_mode__is_expert___patch","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"user_name","in":"path","required":true,"schema":{"title":"User Name"}},{"name":"is_expert","in":"path","required":true,"schema":{"title":"Is Expert"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/users/me/actions/verify-email/":{"patch":{"tags":["users"],"summary":"Send Verification Email","description":"Resends the verification email token to the logged in user\n---\ntags:\n    - users\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Authorization\n        description: Base64 encoded session token\n        required: true\n        type: string\n        default: Token sessionTokenHere==\nresponses:\n    200:\n        description: Resends the user their email verification email\n    500:\n        description: Internal Server Error","operationId":"send_verification_email_api_v2_users_me_actions_verify_email__patch","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"}},"security":[{"APIKeyHeader":[]}]}},"/api/v2/users/actions/register/":{"post":{"tags":["users"],"summary":"Register User With Email","description":"Registers users without OpenStreetMap account\n---\ntags:\n  - users\nproduces:\n  - application/json\nparameters:\n    - in: body\n      name: body\n      required: true\n      description: JSON object to update a user\n      schema:\n          properties:\n              email:\n                  type: string\n                  example: test@test.com\nresponses:\n    200:\n        description: User registered\n    400:\n        description: Client Error - Invalid Request\n    500:\n        description: Internal Server Error","operationId":"register_user_with_email_api_v2_users_actions_register__post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserRegisterEmailDTO"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/users/me/actions/set-interests/":{"post":{"tags":["users"],"summary":"Set User Interests","description":"Creates a relationship between user and interests\n---\ntags:\n    - interests\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Authorization\n        description: Base64 encoded session token\n        required: true\n        type: string\n        default: Token sessionTokenHere==\n    - in: body\n        name: body\n        required: true\n        description: JSON object for creating/updating user and interests relationships\n        schema:\n            properties:\n                interests:\n                    type: array\n                    items:\n                    type: integer\nresponses:\n    200:\n        description: New user interest relationship created\n    400:\n        description: Invalid Request\n    401:\n        description: Unauthorized - Invalid credentials\n    500:\n        description: Internal Server Error","operationId":"set_user_interests_api_v2_users_me_actions_set_interests__post","requestBody":{"content":{"application/json":{"schema":{"type":"object","title":"Data"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"APIKeyHeader":[]}]}},"/api/v2/licenses/":{"get":{"tags":["licenses"],"summary":"Get Licenses","description":"Get all imagery licenses\n---\ntags:\n    - licenses\nproduces:\n    - application/json\nresponses:\n    200:\n        description: Licenses found\n    404:\n        description: Licenses not found\n    500:\n        description: Internal Server Error","operationId":"get_licenses_api_v2_licenses__get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"}}},"post":{"tags":["licenses"],"summary":"Post License","description":"Creates a new mapping license\n---\ntags:\n    - licenses\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Authorization\n        description: Base64 encoded session token\n        required: true\n        type: string\n        default: Token sessionTokenHere==\n    - in: body\n        name: body\n        required: true\n        description: JSON object for creating a new mapping license\n        schema:\n            properties:\n                name:\n                    type: string\n                    default: Public Domain\n                description:\n                    type: string\n                    default: This imagery is in the public domain.\n                plainText:\n                    type: string\n                    default: This imagery is in the public domain.\nresponses:\n    201:\n        description: New license created\n    400:\n        description: Invalid Request\n    401:\n        description: Unauthorized - Invalid credentials\n    500:\n        description: Internal Server Error","operationId":"post_license_api_v2_licenses__post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LicenseDTO"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"APIKeyHeader":[]}]}},"/api/v2/licenses/{license_id}/":{"get":{"tags":["licenses"],"summary":"Retrieve License","description":"Get a specified mapping license\n---\ntags:\n    - licenses\nproduces:\n    - application/json\nparameters:\n    - name: license_id\n        in: path\n        description: Unique license ID\n        required: true\n        type: integer\n        default: 1\nresponses:\n    200:\n        description: License found\n    404:\n        description: License not found\n    500:\n        description: Internal Server Error","operationId":"retrieve_license_api_v2_licenses__license_id___get","parameters":[{"name":"license_id","in":"path","required":true,"schema":{"type":"integer","title":"License Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"patch":{"tags":["licenses"],"summary":"Patch License","description":"Update a specified mapping license\n---\ntags:\n    - licenses\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Authorization\n        description: Base64 encoded session token\n        required: true\n        type: string\n        default: Token sessionTokenHere==\n    - name: license_id\n        in: path\n        description: Unique license ID\n        required: true\n        type: integer\n        default: 1\n    - in: body\n        name: body\n        required: true\n        description: JSON object for updating a specified mapping license\n        schema:\n            properties:\n                name:\n                    type: string\n                    default: Public Domain\n                description:\n                    type: string\n                    default: This imagery is in the public domain.\n                plainText:\n                    type: string\n                    default: This imagery is in the public domain.\nresponses:\n    200:\n        description: License updated\n    400:\n        description: Invalid Request\n    401:\n        description: Unauthorized - Invalid credentials\n    500:\n        description: Internal Server Error","operationId":"patch_license_api_v2_licenses__license_id___patch","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"license_id","in":"path","required":true,"schema":{"type":"integer","title":"License Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LicenseDTO"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["licenses"],"summary":"Delete License","description":"Delete a specified mapping license\n---\ntags:\n    - licenses\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Authorization\n        description: Base64 encoded session token\n        required: true\n        type: string\n        default: Token sessionTokenHere==\n    - name: license_id\n        in: path\n        description: Unique license ID\n        required: true\n        type: integer\n        default: 1\nresponses:\n    200:\n        description: License deleted\n    401:\n        description: Unauthorized - Invalid credentials\n    404:\n        description: License not found\n    500:\n        description: Internal Server Error","operationId":"delete_license_api_v2_licenses__license_id___delete","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"license_id","in":"path","required":true,"schema":{"type":"integer","title":"License Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/licenses/{license_id}/actions/accept-for-me/":{"post":{"tags":["licenses"],"summary":"Accept License","description":"Capture user acceptance of license terms\n---\ntags:\n  - licenses\nproduces:\n  - application/json\nparameters:\n    - in: header\n      name: Authorization\n      description: Base64 encoded session token\n      required: true\n      type: string\n      default: Token sessionTokenHere==\n    - name: license_id\n      in: path\n      description: License ID terms have been accepted for\n      required: true\n      type: integer\n      default: 1\nresponses:\n    200:\n        description: Terms accepted\n    401:\n        description: Unauthorized - Invalid credentials\n    404:\n        description: User or license not found\n    500:\n        description: Internal Server Error","operationId":"accept_license_api_v2_licenses__license_id__actions_accept_for_me__post","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"license_id","in":"path","required":true,"schema":{"type":"integer","title":"License Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/organisations/{organisation_id}/":{"get":{"tags":["organisations"],"summary":"Retrieve Organisation","description":"Retrieves an organisation\n---\ntags:\n    - organisations\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Authorization\n        description: Base64 encoded session token\n        type: string\n        default: Token sessionTokenHere==\n    - name: organisation_id\n        in: path\n        description: The unique organisation ID\n        required: true\n        type: integer\n        default: 1\n    - in: query\n        name: omitManagerList\n        type: boolean\n        description: Set it to true if you don't want the managers list on the response.\n        default: False\nresponses:\n    200:\n        description: Organisation found\n    401:\n        description: Unauthorized - Invalid credentials\n    404:\n        description: Organisation not found\n    500:\n        description: Internal Server Error","operationId":"retrieve_organisation_api_v2_organisations__organisation_id___get","parameters":[{"name":"organisation_id","in":"path","required":true,"schema":{"type":"integer","title":"Organisation Id"}},{"name":"omitManagerList","in":"query","required":false,"schema":{"type":"boolean","description":"Omit organization managers list from the response.","default":false,"title":"Omitmanagerlist"},"description":"Omit organization managers list from the response."}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/OrganisationDTO-Output"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["organisations"],"summary":"Delete Organisation","description":"Deletes an organisation\n---\ntags:\n    - organisations\nproduces:\n    - application/json\nparameters:\n    - in: header\n      name: Authorization\n      description: Base64 encoded session token\n      required: true\n      type: string\n      default: Token sessionTokenHere==\n    - name: organisation_id\n      in: path\n      description: The unique organisation ID\n      required: true\n      type: integer\n      default: 1\nresponses:\n    200:\n        description: Organisation deleted\n    401:\n        description: Unauthorized - Invalid credentials\n    403:\n        description: Forbidden\n    404:\n        description: Organisation not found\n    500:\n        description: Internal Server Error","operationId":"delete_organisation_api_v2_organisations__organisation_id___delete","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"organisation_id","in":"path","required":true,"schema":{"type":"integer","title":"Organisation Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"patch":{"tags":["organisations"],"summary":"Update Organisation","description":"Updates an organisation\n---\ntags:\n    - organisations\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Authorization\n        description: Base64 encoded session token\n        required: true\n        type: string\n        default: Token sessionTokenHere==\n    - name: organisation_id\n        in: path\n        description: The unique organisation ID\n        required: true\n        type: integer\n        default: 1\n    - in: body\n        name: body\n        required: true\n        description: JSON object for updating an organisation\n        schema:\n        properties:\n            name:\n                type: string\n                default: HOT\n            slug:\n                type: string\n                default: HOT\n            logo:\n                type: string\n                default: https://tasks.hotosm.org/assets/img/hot-tm-logo.svg\n            url:\n                type: string\n                default: https://hotosm.org\n            managers:\n                type: array\n                items:\n                    type: string\n                default: [\n                    user_1,\n                    user_2\n                ]\nresponses:\n    201:\n        description: Organisation updated successfully\n    400:\n        description: Client Error - Invalid Request\n    401:\n        description: Unauthorized - Invalid credentials\n    403:\n        description: Forbidden\n    500:\n        description: Internal Server Error","operationId":"update_organisation_api_v2_organisations__organisation_id___patch","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"organisation_id","in":"path","required":true,"schema":{"type":"integer","title":"Organisation Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateOrganisationDTO"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/organisations/{slug}/":{"get":{"tags":["organisations"],"summary":"Retrieve Organisation By Slug","description":"Retrieves an organisation\n---\ntags:\n    - organisations\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Authorization\n        description: Base64 encoded session token\n        type: string\n        default: Token sessionTokenHere==\n    - name: slug\n        in: path\n        description: The unique organisation slug\n        required: true\n        type: string\n        default: hot\n    - in: query\n        name: omitManagerList\n        type: boolean\n        description: Set it to true if you don't want the managers list on the response.\n        default: False\nresponses:\n    200:\n        description: Organisation found\n    404:\n        description: Organisation not found\n    500:\n        description: Internal Server Error","operationId":"retrieve_organisation_by_slug_api_v2_organisations__slug___get","parameters":[{"name":"slug","in":"path","required":true,"schema":{"type":"string","title":"Slug"}},{"name":"omitManagerList","in":"query","required":false,"schema":{"type":"boolean","description":"Omit organization managers list from the response.","default":false,"title":"Omitmanagerlist"},"description":"Omit organization managers list from the response."}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/OrganisationDTO-Output"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/organisations/":{"post":{"tags":["organisations"],"summary":"Create Organisation","description":"Creates a new organisation\n---\ntags:\n    - organisations\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Authorization\n        description: Base64 encoded session token\n        required: true\n        type: string\n        default: Token sessionTokenHere==\n    - in: body\n        name: body\n        required: true\n        description: JSON object for creating organisation\n        schema:\n        properties:\n            name:\n                type: string\n                default: HOT\n            slug:\n                type: string\n                default: hot\n            logo:\n                type: string\n                default: https://cdn.hotosm.org/tasking-manager/uploads/1588741335578_hot-logo.png\n            url:\n                type: string\n                default: https://hotosm.org\n            managers:\n                type: array\n                items:\n                    type: string\n                default: [\n                    user_1,\n                    user_2\n                ]\nresponses:\n    201:\n        description: Organisation created successfully\n    400:\n        description: Client Error - Invalid Request\n    401:\n        description: Unauthorized - Invalid credentials\n    403:\n        description: Forbidden\n    402:\n        description: Duplicate Name - Organisation name already exists\n    500:\n        description: Internal Server Error","operationId":"create_organisation_api_v2_organisations__post","security":[{"APIKeyHeader":[]}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/NewOrganisationDTO"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"get":{"tags":["organisations"],"summary":"List Organisation","description":"List all organisations\n---\ntags:\n    - organisations\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Authorization\n        description: Base64 encoded session token\n        type: string\n        default: Token sessionTokenHere==\n    - name: manager_user_id\n        in: query\n        description: Filter projects on managers with this user_id\n        required: false\n        type: integer\n    - in: query\n        name: omitManagerList\n        type: boolean\n        description: Set it to true if you don't want the managers list on the response.\n        default: False\n    - in: query\n        name: omitOrgStats\n        type: boolean\n        description: Set it to true if you don't want organisation stats on the response. \n\n        \n\n        Adds year to date organisation stats to response if set false.\n        default: True\n\nresponses:\n    200:\n        description: Organisations found\n    400:\n        description: Client Error - Invalid Request\n    401:\n        description: Unauthorized - Invalid credentials\n    403:\n        description: Unauthorized - Not allowed\n    404:\n        description: Organisations not found\n    500:\n        description: Internal Server Error","operationId":"list_organisation_api_v2_organisations__get","parameters":[{"name":"omitOrgStats","in":"query","required":false,"schema":{"type":"boolean","description":"Omit organization stats from the response.","default":true,"title":"Omitorgstats"},"description":"Omit organization stats from the response."},{"name":"omitManagerList","in":"query","required":false,"schema":{"type":"boolean","description":"Omit organization managers list from the response.","default":false,"title":"Omitmanagerlist"},"description":"Omit organization managers list from the response."},{"name":"manager_user_id","in":"query","required":false,"schema":{"type":"integer","description":"ID of the manager user.","title":"Manager User Id"},"description":"ID of the manager user."}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ListOrganisationsDTO"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/organisations/{organisation_id}/statistics/":{"get":{"tags":["organisations"],"summary":"Get Organisation With Statistics","description":"Return statistics about projects and active tasks of an organisation\n---\ntags:\n    - organisations\nproduces:\n    - application/json\nparameters:\n    - name: organisation_id\n        in: path\n        description: The unique organisation ID\n        required: true\n        type: integer\n        default: 1\nresponses:\n    200:\n        description: Organisation found\n    404:\n        description: Organisation not found\n    500:\n        description: Internal Server Error","operationId":"get_organisation_with_statistics_api_v2_organisations__organisation_id__statistics__get","parameters":[{"name":"organisation_id","in":"path","required":true,"schema":{"type":"integer","title":"Organisation Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/OrganizationStatsDTO-Output"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/organisations/{organisation_id}/campaigns/{campaign_id}/":{"post":{"tags":["organisations"],"summary":"Post Organisation Campaign","description":"Assigns a campaign to an organisation\n---\ntags:\n    - campaigns\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Authorization\n        description: Base64 encoded session token\n        required: true\n        type: string\n        default: Token sessionTokenHere==\n    - name: organisation_id\n        in: path\n        description: Unique organisation ID\n        required: true\n        type: integer\n        default: 1\n    - name: campaign_id\n        in: path\n        description: Unique campaign ID\n        required: true\n        type: integer\n        default: 1\nresponses:\n    200:\n        description: Organisation and campaign assigned successfully\n    401:\n        description: Unauthorized - Invalid credentials\n    403:\n        description: Forbidden - users have submitted mapping\n    404:\n        description: Project not found\n    500:\n        description: Internal Server Error","operationId":"post_organisation_campaign_api_v2_organisations__organisation_id__campaigns__campaign_id___post","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"organisation_id","in":"path","required":true,"schema":{"type":"integer","title":"Organisation Id"}},{"name":"campaign_id","in":"path","required":true,"schema":{"type":"integer","title":"Campaign Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["organisations"],"summary":"Delete Organisation Campaign","description":"Un-assigns an organization from an campaign\n---\ntags:\n    - campaigns\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Authorization\n        description: Base64 encoded session token\n        required: true\n        type: string\n        default: Token sessionTokenHere==\n    - name: organisation_id\n        in: path\n        description: Unique organisation ID\n        required: true\n        type: integer\n        default: 1\n    - name: campaign_id\n        in: path\n        description: Unique campaign ID\n        required: true\n        type: integer\n        default: 1\nresponses:\n    200:\n        description: Organisation and campaign unassociated successfully\n    401:\n        description: Unauthorized - Invalid credentials\n    403:\n        description: Forbidden - users have submitted mapping\n    404:\n        description: Project not found\n    500:\n        description: Internal Server Error","operationId":"delete_organisation_campaign_api_v2_organisations__organisation_id__campaigns__campaign_id___delete","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"organisation_id","in":"path","required":true,"schema":{"type":"integer","title":"Organisation Id"}},{"name":"campaign_id","in":"path","required":true,"schema":{"type":"integer","title":"Campaign Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/organisations/{organisation_id}/campaigns/":{"get":{"tags":["organisations"],"summary":"Get Organisation Campaigns","description":"Returns all campaigns related to an organisation\n---\ntags:\n    - campaigns\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Authorization\n        description: Base64 encoded session token\n        required: false\n        type: string\n        default: Token sessionTokenHere==\n    - name: organisation_id\n        in: path\n        description: Unique project ID\n        required: true\n        type: integer\n        default: 1\nresponses:\n    200:\n        description: Success\n    404:\n        description: Organisation not found\n    500:\n        description: Internal Server Error","operationId":"get_organisation_campaigns_api_v2_organisations__organisation_id__campaigns__get","parameters":[{"name":"organisation_id","in":"path","required":true,"schema":{"type":"integer","title":"Organisation Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CampaignListDTO"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/projects/{project_id}/tasks/{task_id}/":{"get":{"tags":["projects"],"summary":"Retrieve Task","description":"Get a task's metadata\n---\ntags:\n    - tasks\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Accept-Language\n        description: Language user is requesting\n        type: string\n        required: true\n        default: en\n    - name: project_id\n        in: path\n        description: Project ID the task is associated with\n        required: true\n        type: integer\n        default: 1\n    - name: task_id\n        in: path\n        description: Unique task ID\n        required: true\n        type: integer\n        default: 1\nresponses:\n    200:\n        description: Task found\n    404:\n        description: Task not found\n    500:\n        description: Internal Server Error","operationId":"retrieve_task_api_v2_projects__project_id__tasks__task_id___get","parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"integer","title":"Project Id"}},{"name":"task_id","in":"path","required":true,"schema":{"type":"integer","title":"Task Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/projects/{project_id}/tasks/":{"get":{"tags":["projects"],"summary":"Get Project Tasks","description":"Get all tasks for a project as JSON\n---\ntags:\n    - tasks\nproduces:\n    - application/json\nparameters:\n    - name: project_id\n        in: path\n        description: Project ID the task is associated with\n        required: true\n        type: integer\n        default: 1\n    - in: query\n        name: tasks\n        type: string\n        description: List of tasks; leave blank to retrieve all\n        default: 1,2\n    - in: query\n        name: as_file\n        type: boolean\n        description: Set to true if file download preferred\n        default: True\nresponses:\n    200:\n        description: Project found\n    403:\n        description: Forbidden\n    404:\n        description: Project not found\n    500:\n        description: Internal Server Error","operationId":"get_project_tasks_api_v2_projects__project_id__tasks__get","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"integer","title":"Project Id"}},{"name":"tasks","in":"query","required":false,"schema":{"type":"string","title":"Tasks"}},{"name":"as_file","in":"query","required":false,"schema":{"type":"boolean","default":false,"title":"As File"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["projects"],"summary":"Delete","description":"Delete a list of tasks from a project\n---\ntags:\n    - tasks\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Authorization\n        description: Base64 encoded session token\n        required: true\n        type: string\n        default: Token sessionTokenHere==\n    - name: project_id\n        in: path\n        description: Project ID the task is associated with\n        required: true\n        type: integer\n        default: 1\n    - in: body\n        name: body\n        required: true\n        description: JSON object with a list of tasks to delete\n        schema:\n            properties:\n                tasks:\n                    type: array\n                    items:\n                        type: integer\n                    default: [ 1, 2 ]\nresponses:\n    200:\n        description: Task(s) deleted\n    400:\n        description: Bad request\n    403:\n        description: Forbidden\n    404:\n        description: Project or Task Not Found\n    500:\n        description: Internal Server Error","operationId":"delete_api_v2_projects__project_id__tasks__delete","parameters":[{"name":"project_id","in":"path","required":true,"schema":{"title":"Project Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/projects/{project_id}/tasks/queries/xml/":{"get":{"tags":["projects"],"summary":"Get Tasks Xml","description":"Get all tasks for a project as OSM XML\n---\ntags:\n    - tasks\nproduces:\n    - application/xml\nparameters:\n    - name: project_id\n        in: path\n        description: Project ID the task is associated with\n        required: true\n        type: integer\n        default: 1\n    - in: query\n        name: tasks\n        type: string\n        description: List of tasks; leave blank to retrieve all\n        default: 1,2\n    - in: query\n        name: as_file\n        type: boolean\n        description: Set to true if file download preferred\n        default: False\nresponses:\n    200:\n        description: OSM XML\n    400:\n        description: Client Error\n    404:\n        description: No mapped tasks\n    500:\n        description: Internal Server Error","operationId":"get_tasks_xml_api_v2_projects__project_id__tasks_queries_xml__get","parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"integer","title":"Project Id"}},{"name":"tasks","in":"query","required":false,"schema":{"type":"string","title":"Tasks"}},{"name":"as_file","in":"query","required":false,"schema":{"type":"boolean","default":false,"title":"As File"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/projects/{project_id}/tasks/queries/gpx/":{"get":{"tags":["projects"],"summary":"Get Tasks Gpx","description":"Get all tasks for a project as GPX\n---\ntags:\n    - tasks\nproduces:\n    - application/xml\nparameters:\n    - name: project_id\n        in: path\n        description: Project ID the task is associated with\n        required: true\n        type: integer\n        default: 1\n    - in: query\n        name: tasks\n        type: string\n        description: List of tasks; leave blank for all\n        default: 1,2\n    - in: query\n        name: as_file\n        type: boolean\n        description: Set to true if file download preferred\n        default: False\nresponses:\n    200:\n        description: GPX XML\n    400:\n        description: Client error\n    404:\n        description: No mapped tasks\n    500:\n        description: Internal Server Error","operationId":"get_tasks_gpx_api_v2_projects__project_id__tasks_queries_gpx__get","parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"integer","title":"Project Id"}},{"name":"tasks","in":"query","required":false,"schema":{"type":"string","title":"Tasks"}},{"name":"as_file","in":"query","required":false,"schema":{"type":"boolean","default":false,"title":"As File"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/projects/{project_id}/tasks/queries/aoi/":{"put":{"tags":["projects"],"summary":"Tasks Aoi","description":"Get task tiles intersecting with the aoi provided\n---\ntags:\n    - tasks\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Authorization\n        description: Base64 encoded session token\n        required: true\n        type: string\n        default: Token sessionTokenHere==\n    - in: body\n        name: body\n        required: true\n        description: JSON object containing aoi and tasks and bool flag for controlling clip grid to aoi\n        schema:\n            properties:\n                clipToAoi:\n                type: boolean\n                default: true\n                areaOfInterest:\n                    schema:\n                        properties:\n                            type:\n                                type: string\n                                default: FeatureCollection\n                            features:\n                                type: array\n                                items:\n                                    schema:\n                                        $ref: \"#/definitions/GeoJsonFeature\"\n                grid:\n                    schema:\n                        properties:\n                            type:\n                                type: string\n                                default: FeatureCollection\n                            features:\n                                type: array\n                                items:\n                                    schema:\n                                        $ref: \"#/definitions/GeoJsonFeature\"\nresponses:\n    200:\n        description: Intersecting tasks found successfully\n    400:\n        description: Client Error - Invalid Request\n    500:\n        description: Internal Server Error","operationId":"tasks_aoi_api_v2_projects__project_id__tasks_queries_aoi__put","parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"integer","title":"Project Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/projects/{project_id}/tasks/queries/mapped/":{"get":{"tags":["projects"],"summary":"Get Mapped Tasks","description":"Get all mapped tasks for a project grouped by username\n---\ntags:\n    - tasks\nproduces:\n    - application/json\nparameters:\n    - name: project_id\n        in: path\n        description: Unique project ID\n        required: true\n        type: integer\n        default: 1\nresponses:\n    200:\n        description: Mapped tasks returned\n    500:\n        description: Internal Server Error","operationId":"get_mapped_tasks_api_v2_projects__project_id__tasks_queries_mapped__get","parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"integer","title":"Project Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/projects/{username}/tasks/queries/own/invalidated/":{"get":{"tags":["projects"],"summary":"Get Invalidated Tasks","description":"Get invalidated tasks either mapped by user or invalidated by user\n---\ntags:\n    - tasks\nproduces:\n    - application/json\nparameters:\n    - in: header\n      name: Authorization\n      description: Base64 encoded session token\n      required: true\n      type: string\n      default: Token sessionTokenHere==\n    - in: header\n      name: Accept-Language\n      description: Language user is requesting\n      type: string\n      required: true\n      default: en\n    - name: username\n      in: path\n      description: The users username\n      required: true\n      type: string\n    - in: query\n      name: asValidator\n      description: treats user as validator, rather than mapper, if true\n      type: string\n    - in: query\n      name: sortBy\n      description: field to sort by, defaults to action_date\n      type: string\n    - in: query\n      name: sortDirection\n      description: direction of sort, defaults to desc\n      type: string\n    - in: query\n      name: page\n      description: Page of results user requested\n      type: integer\n    - in: query\n      name: pageSize\n      description: Size of page, defaults to 10\n      type: integer\n    - in: query\n      name: project\n      description: Optional project filter\n      type: integer\n    - in: query\n      name: closed\n      description: Optional filter for open/closed invalidations\n      type: boolean\nresponses:\n    200:\n        description: Invalidated tasks user has invalidated\n    404:\n        description: No invalidated tasks\n    500:\n        description: Internal Server Error","operationId":"get_invalidated_tasks_api_v2_projects__username__tasks_queries_own_invalidated__get","parameters":[{"name":"username","in":"path","required":true,"schema":{"type":"string","title":"Username"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/projects/{project_id}/tasks/actions/lock-for-mapping/{task_id}/":{"post":{"tags":["tasks"],"summary":"Lock For Mapping","description":"Locks a task for mapping\n---\ntags:\n    - tasks\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Authorization\n        description: Base64 encoded session token\n        required: true\n        type: string\n        default: Token sessionTokenHere==\n    - in: header\n        name: Accept-Language\n        description: Language user is requesting\n        type: string\n        required: true\n        default: en\n    - name: project_id\n        in: path\n        description: Project ID the task is associated with\n        required: true\n        type: integer\n        default: 1\n    - name: task_id\n        in: path\n        description: Unique task ID\n        required: true\n        type: integer\n        default: 1\nresponses:\n    200:\n        description: Task locked\n    400:\n        description: Client Error\n    401:\n        description: Unauthorized - Invalid credentials\n    403:\n        description: Forbidden\n    404:\n        description: Task not found\n    409:\n        description: User has not accepted license terms of project\n    500:\n        description: Internal Server Error","operationId":"lock_for_mapping_api_v2_projects__project_id__tasks_actions_lock_for_mapping__task_id___post","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"integer","title":"Project Id"}},{"name":"task_id","in":"path","required":true,"schema":{"type":"integer","title":"Task Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/projects/{project_id}/tasks/actions/stop-mapping/{task_id}/":{"post":{"tags":["tasks"],"summary":"Stop Mapping","description":"Unlock a task that is locked for mapping resetting it to its last status\n---\ntags:\n    - tasks\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Authorization\n        description: Base64 encoded session token\n        required: true\n        type: string\n        default: Token sessionTokenHere==\n    - in: header\n        name: Accept-Language\n        description: Language user is requesting\n        type: string\n        required: true\n        default: en\n    - name: project_id\n        in: path\n        description: Project ID the task is associated with\n        required: true\n        type: integer\n        default: 1\n    - name: task_id\n        in: path\n        description: Unique task ID\n        required: true\n        type: integer\n        default: 1\n    - in: body\n        name: body\n        required: true\n        description: JSON object for unlocking a task\n        schema:\n            id: TaskUpdateStop\n            properties:\n                comment:\n                    type: string\n                    description: Optional user comment about the task\n                    default: Comment about mapping done before stop\nresponses:\n    200:\n        description: Task unlocked\n    400:\n        description: Client Error\n    401:\n        description: Unauthorized - Invalid credentials\n    403:\n        description: Forbidden\n    404:\n        description: Task not found\n    500:\n        description: Internal Server Error","operationId":"stop_mapping_api_v2_projects__project_id__tasks_actions_stop_mapping__task_id___post","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"integer","title":"Project Id"}},{"name":"task_id","in":"path","required":true,"schema":{"type":"integer","title":"Task Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/projects/{project_id}/tasks/actions/unlock-after-mapping/{task_id}/":{"post":{"tags":["tasks"],"summary":"Unlock After Mapping","description":"Set a task as mapped\n---\ntags:\n    - tasks\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Authorization\n        description: Base64 encoded session token\n        required: true\n        type: string\n        default: Token sessionTokenHere==\n    - in: header\n        name: Accept-Language\n        description: Language user is requesting\n        type: string\n        required: true\n        default: en\n    - name: project_id\n        in: path\n        description: Project ID the task is associated with\n        required: true\n        type: integer\n        default: 1\n    - name: task_id\n        in: path\n        description: Unique task ID\n        required: true\n        type: integer\n        default: 1\n    - in: body\n        name: body\n        required: true\n        description: JSON object for unlocking a task\n        schema:\n            id: TaskUpdateUnlock\n            required:\n                - status\n            properties:\n                status:\n                    type: string\n                    description: The new status for the task\n                    default: MAPPED\n                comment:\n                    type: string\n                    description: Optional user comment about the task\n                    default: Comment about the mapping\nresponses:\n    200:\n        description: Task unlocked\n    400:\n        description: Client Error\n    401:\n        description: Unauthorized - Invalid credentials\n    403:\n        description: Forbidden\n    404:\n        description: Task not found\n    500:\n        description: Internal Server Error","operationId":"unlock_after_mapping_api_v2_projects__project_id__tasks_actions_unlock_after_mapping__task_id___post","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"integer","title":"Project Id"}},{"name":"task_id","in":"path","required":true,"schema":{"type":"integer","title":"Task Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/projects/{project_id}/tasks/actions/undo-last-action/{task_id}/":{"post":{"tags":["tasks"],"summary":"Undo Last Action","description":"Undo a task's mapping status\n---\ntags:\n    - tasks\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Authorization\n        description: Base64 encoded session token\n        required: true\n        type: string\n        default: Token sessionTokenHere==\n    - in: header\n        name: Accept-Language\n        description: Language user is requesting\n        type: string\n        required: true\n        default: en\n    - name: project_id\n        in: path\n        description: Project ID the task is associated with\n        required: true\n        type: integer\n        default: 1\n    - name: task_id\n        in: path\n        description: Unique task ID\n        required: true\n        type: integer\n        default: 1\nresponses:\n    200:\n        description: Task found\n    403:\n        description: Forbidden\n    404:\n        description: Task not found\n    500:\n        description: Internal Server Error","operationId":"undo_last_action_api_v2_projects__project_id__tasks_actions_undo_last_action__task_id___post","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"integer","title":"Project Id"}},{"name":"task_id","in":"path","required":true,"schema":{"type":"integer","title":"Task Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/projects/{project_id}/tasks/actions/lock-for-validation/":{"post":{"tags":["tasks"],"summary":"Lock For Validation","description":"Lock tasks for validation\n---\ntags:\n    - tasks\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Authorization\n        description: Base64 encoded session token\n        required: true\n        type: string\n        default: Token sessionTokenHere==\n    - in: header\n        name: Accept-Language\n        description: Language user is requesting\n        type: string\n        required: true\n        default: en\n    - name: project_id\n        in: path\n        description: Project ID the tasks are associated with\n        required: true\n        type: integer\n        default: 1\n    - in: body\n        name: body\n        required: true\n        description: JSON object for locking task(s)\n        schema:\n            properties:\n                taskIds:\n                    type: array\n                    items:\n                        type: integer\n                    description: Array of taskIds for locking\n                    default: [1,2]\nresponses:\n    200:\n        description: Task(s) locked for validation\n    400:\n        description: Client Error\n    401:\n        description: Unauthorized - Invalid credentials\n    403:\n        description: Forbidden\n    404:\n        description: Task not found\n    409:\n        description: User has not accepted license terms of project\n    500:\n        description: Internal Server Error","operationId":"lock_for_validation_api_v2_projects__project_id__tasks_actions_lock_for_validation__post","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"integer","title":"Project Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/projects/{project_id}/tasks/actions/stop-validation/":{"post":{"tags":["tasks"],"summary":"Stop Validation","description":"Unlock tasks that are locked for validation resetting them to their last status\n---\ntags:\n    - tasks\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Authorization\n        description: Base64 encoded session token\n        required: true\n        type: string\n        default: Token sessionTokenHere==\n    - in: header\n        name: Accept-Language\n        description: Language user is requesting\n        type: string\n        required: true\n        default: en\n    - name: project_id\n        in: path\n        description: Project ID the task is associated with\n        required: true\n        type: integer\n        default: 1\n    - in: body\n        name: body\n        required: true\n        description: JSON object for unlocking a task\n        schema:\n            properties:\n                resetTasks:\n                    type: array\n                    items:\n                        schema:\n                            $ref: \"#/definitions/ResetTask\"\nresponses:\n    200:\n        description: Task unlocked\n    400:\n        description: Client Error\n    401:\n        description: Unauthorized - Invalid credentials\n    403:\n        description: Forbidden\n    404:\n        description: Task not found\n    500:\n        description: Internal Server Error","operationId":"stop_validation_api_v2_projects__project_id__tasks_actions_stop_validation__post","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"integer","title":"Project Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/projects/{project_id}/tasks/actions/unlock-after-validation/":{"post":{"tags":["tasks"],"summary":"Unlock After Validation","description":"Set tasks as validated\n---\ntags:\n    - tasks\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Authorization\n        description: Base64 encoded session token\n        required: true\n        type: string\n        default: Token sessionTokenHere==\n    - in: header\n        name: Accept-Language\n        description: Language user is requesting\n        type: string\n        required: true\n        default: en\n    - name: project_id\n        in: path\n        description: Project ID the task is associated with\n        required: true\n        type: integer\n        default: 1\n    - in: body\n        name: body\n        required: true\n        description: JSON object for unlocking a task\n        schema:\n            properties:\n                validatedTasks:\n                    type: array\n                    items:\n                        schema:\n                            $ref: \"#/definitions/ValidatedTask\"\nresponses:\n    200:\n        description: Task unlocked\n    400:\n        description: Client Error\n    401:\n        description: Unauthorized - Invalid credentials\n    403:\n        description: Forbidden\n    404:\n        description: Task not found\n    500:\n        description: Internal Server Error","operationId":"unlock_after_validation_api_v2_projects__project_id__tasks_actions_unlock_after_validation__post","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"integer","title":"Project Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/projects/{project_id}/tasks/actions/map-all/":{"post":{"tags":["tasks"],"summary":"Map All","description":"Map all tasks on a project\n---\ntags:\n    - tasks\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Authorization\n        description: Base64 encoded session token\n        required: true\n        type: string\n        default: Token sessionTokenHere==\n    - name: project_id\n        in: path\n        description: Unique project ID\n        required: true\n        type: integer\n        default: 1\nresponses:\n    200:\n        description: All tasks mapped\n    401:\n        description: Unauthorized - Invalid credentials\n    403:\n        description: Forbidden\n    500:\n        description: Internal Server Error","operationId":"map_all_api_v2_projects__project_id__tasks_actions_map_all__post","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"integer","title":"Project Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/projects/{project_id}/tasks/actions/validate-all/":{"post":{"tags":["tasks"],"summary":"Post","description":"Validate all mapped tasks on a project\n---\ntags:\n    - tasks\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Authorization\n        description: Base64 encoded session token\n        required: true\n        type: string\n        default: Token sessionTokenHere==\n    - name: project_id\n        in: path\n        description: Unique project ID\n        required: true\n        type: integer\n        default: 1\nresponses:\n    200:\n        description: All mapped tasks validated\n    401:\n        description: Unauthorized - Invalid credentials\n    403:\n        description: Forbidden\n    500:\n        description: Internal Server Error","operationId":"post_api_v2_projects__project_id__tasks_actions_validate_all__post","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"integer","title":"Project Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/projects/{project_id}/tasks/actions/invalidate-all/":{"post":{"tags":["tasks"],"summary":"Invalidate All","description":"Invalidate all validated tasks on a project\n---\ntags:\n    - tasks\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Authorization\n        description: Base64 encoded session token\n        required: true\n        type: string\n        default: Token sessionTokenHere==\n    - name: project_id\n        in: path\n        description: Unique project ID\n        required: true\n        type: integer\n        default: 1\nresponses:\n    200:\n        description: All validated tasks invalidated\n    401:\n        description: Unauthorized - Invalid credentials\n    403:\n        description: Forbidden\n    500:\n        description: Internal Server Error","operationId":"invalidate_all_api_v2_projects__project_id__tasks_actions_invalidate_all__post","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"integer","title":"Project Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/projects/{project_id}/tasks/actions/reset-all-badimagery/":{"post":{"tags":["tasks"],"summary":"Reset All Bad Imagery","description":"Set all bad imagery tasks as ready for mapping\n---\ntags:\n    - tasks\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Authorization\n        description: Base64 encoded session token\n        required: true\n        type: string\n        default: Token sessionTokenHere==\n    - name: project_id\n        in: path\n        description: Unique project ID\n        required: true\n        type: integer\n        default: 1\nresponses:\n    200:\n        description: All bad imagery tasks marked ready for mapping\n    401:\n        description: Unauthorized - Invalid credentials\n    403:\n        description: Forbidden\n    500:\n        description: Internal Server Error","operationId":"reset_all_bad_imagery_api_v2_projects__project_id__tasks_actions_reset_all_badimagery__post","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"integer","title":"Project Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/projects/{project_id}/tasks/actions/reset-all/":{"post":{"tags":["tasks"],"summary":"Reset All","description":"Reset all tasks on project back to ready, preserving history\n---\ntags:\n    - tasks\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Authorization\n        description: Base64 encoded session token\n        required: true\n        type: string\n        default: Token sessionTokenHere==\n    - name: project_id\n        in: path\n        description: Unique project ID\n        required: true\n        type: integer\n        default: 1\nresponses:\n    200:\n        description: All tasks reset\n    401:\n        description: Unauthorized - Invalid credentials\n    403:\n        description: Forbidden\n    500:\n        description: Internal Server Error","operationId":"reset_all_api_v2_projects__project_id__tasks_actions_reset_all__post","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"integer","title":"Project Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/projects/{project_id}/tasks/actions/split/{task_id}/":{"post":{"tags":["tasks"],"summary":"Split Task","description":"Split a task\n---\ntags:\n    - tasks\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Authorization\n        description: Base64 encoded session token\n        required: true\n        type: string\n        default: Token sessionTokenHere==\n    - in: header\n        name: Accept-Language\n        description: Language user is requesting\n        type: string\n        required: true\n        default: en\n    - name: project_id\n        in: path\n        description: Project ID the task is associated with\n        required: true\n        type: integer\n        default: 1\n    - name: task_id\n        in: path\n        description: Unique task ID\n        required: true\n        type: integer\n        default: 1\nresponses:\n    200:\n        description: Task split OK\n    400:\n        description: Client Error\n    401:\n        description: Unauthorized - Invalid credentials\n    403:\n        description: Forbidden\n    404:\n        description: Task not found\n    500:\n        description: Internal Server Error","operationId":"split_task_api_v2_projects__project_id__tasks_actions_split__task_id___post","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"integer","title":"Project Id"}},{"name":"task_id","in":"path","required":true,"schema":{"type":"integer","title":"Task Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/projects/{project_id}/tasks/actions/extend/":{"post":{"tags":["tasks"],"summary":"Extend Duration","description":"Extends duration of locked tasks\n---\ntags:\n    - tasks\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Authorization\n        description: Base64 encoded session token\n        required: true\n        type: string\n        default: Token sessionTokenHere==\n    - in: header\n        name: Accept-Language\n        description: Language user is requesting\n        type: string\n        required: true\n        default: en\n    - name: project_id\n        in: path\n        description: Project ID the tasks are associated with\n        required: true\n        type: integer\n        default: 1\n    - in: body\n        name: body\n        required: true\n        description: JSON object for locking task(s)\n        schema:\n            properties:\n                taskIds:\n                    type: array\n                    items:\n                        type: integer\n                    description: Array of taskIds to extend time for\n                    default: [1,2]\nresponses:\n    200:\n        description: Task(s) locked for validation\n    400:\n        description: Client Error\n    401:\n        description: Unauthorized - Invalid credentials\n    403:\n        description: Forbidden\n    404:\n        description: Task not found\n    500:\n        description: Internal Server Error","operationId":"extend_duration_api_v2_projects__project_id__tasks_actions_extend__post","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"integer","title":"Project Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/projects/{project_id}/tasks/actions/reset-by-user/":{"post":{"tags":["tasks"],"summary":"Reset By User","description":"Revert tasks by a specific user in a project\n---\ntags:\n    - tasks\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Authorization\n        description: Base64 encoded session token\n        required: true\n        type: string\n        default: Token session\n    - in: header\n        name: Accept-Language\n        description: Language user is requesting\n        type: string\n        required: true\n        default: en\n    - in: path\n        name: project_id\n        description: Project ID the tasks are associated with\n        required: true\n        type: integer\n        default: 1\n    - in: query\n        name: username\n        description: Username to revert tasks for\n        required: true\n        type: string\n        default: test\n    - in: query\n        name: action\n        description: Action to revert tasks for. Can be BADIMAGERY or VALIDATED\n        required: true\n        type: string\nresponses:\n    200:\n        description: Tasks reverted\n    400:\n        description: Client Error\n    401:\n        description: Unauthorized - Invalid credentials\n    403:\n        description: Forbidden\n    404:\n        description: Task not found\n    500:\n        description: Internal Server Error","operationId":"reset_by_user_api_v2_projects__project_id__tasks_actions_reset_by_user__post","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"project_id","in":"path","required":true,"schema":{"type":"integer","title":"Project Id"}},{"name":"username","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"description":"Username to revert tasks for","title":"Username"},"description":"Username to revert tasks for","example":"test"},{"name":"action","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"description":"Action to revert tasks for. Can be BADIMAGERY or VALIDATED","title":"Action"},"description":"Action to revert tasks for. Can be BADIMAGERY or VALIDATED","example":"BADIMAGERY"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/tasks/statistics/":{"get":{"tags":["tasks"],"summary":"Get Task Stats","description":"Get Task Stats\n---\ntags:\n  - tasks\nproduces:\n  - application/json\nparameters:\n    - in: header\n      name: Authorization\n      description: Base64 encoded session token\n      type: string\n      required: true\n      default: Token sessionTokenHere==\n    - in: query\n      name: startDate\n      description: Date to filter as minimum\n      required: true\n      type: string\n    - in: query\n      name: endDate\n      description: Date to filter as maximum. Default value is the current date.\n      required: false\n      type: string\n    - in: query\n      name: organisationName\n      description: Organisation name to filter by\n      required: false\n    - in: query\n      name: organisationId\n      description: Organisation ID to filter by\n      required: false\n    - in: query\n      name: campaign\n      description: Campaign name to filter by\n      required: false\n    - in: query\n      name: projectId\n      description: Project IDs to filter by\n      required: false\n    - in: query\n      name: country\n      description: Country name to filter by\n      required: false\nresponses:\n    200:\n        description: Task statistics\n    400:\n        description: Bad Request\n    401:\n        description: Request is not authenticated\n    500:\n        description: Internal Server Error","operationId":"get_task_stats_api_v2_tasks_statistics__get","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"startDate","in":"query","required":true,"schema":{"type":"string","title":"Startdate"}},{"name":"endDate","in":"query","required":false,"schema":{"type":"string","default":"2025-07-30","title":"Enddate"}},{"name":"organisationId","in":"query","required":false,"schema":{"type":"string","title":"Organisationid"}},{"name":"organisationName","in":"query","required":false,"schema":{"type":"string","title":"Organisationname"}},{"name":"campaign","in":"query","required":false,"schema":{"type":"string","title":"Campaign"}},{"name":"projectId","in":"query","required":false,"schema":{"type":"string","title":"Projectid"}},{"name":"country","in":"query","required":false,"schema":{"type":"string","title":"Country"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/system/authentication/applications/":{"get":{"tags":["system"],"summary":"Get Application Keys","description":"Gets application keys for a user\n---\ntags:\n  - system\nproduces:\n  - application/json\nparameters:\n  - in: header\n    name: Authorization\n    description: Base64 encoded session token\n    required: true\n    type: string\n    default: Token sessionTokenHere==\nresponses:\n  200:\n    description: User keys retrieved\n  404:\n    description: User has no keys\n  500:\n    description: A problem occurred","operationId":"get_application_keys_api_v2_system_authentication_applications__get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"}},"security":[{"APIKeyHeader":[]}]},"post":{"tags":["system"],"summary":"Post Application Key","description":"Creates an application key for the user\n---\ntags:\n  - system\nproduces:\n  - application/json\nparameters:\n  - in: header\n    name: Authorization\n    description: Base64 encoded session token\n    required: true\n    type: string\n    default: Token sessionTokenHere==\nresponses:\n  200:\n    description: Key generated successfully\n  302:\n    description: User is not authorized to create a key\n  500:\n    description: A problem occurred","operationId":"post_application_key_api_v2_system_authentication_applications__post","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"}},"security":[{"APIKeyHeader":[]}]}},"/api/v2/system/authentication/applications/{application_key}/":{"patch":{"tags":["system"],"summary":"Patch Application Key","description":"Checks the validity of an application key\n---\ntags:\n  - system\nproduces:\n  - application/json\nparameters:\n  - in: path\n    name: application_key\n    description: Application key to test\n    type: string\n    required: true\n    default: 1\nresponses:\n  200:\n    description: Key is valid\n  302:\n    description: Key is not valid\n  500:\n    description: A problem occurred","operationId":"patch_application_key_api_v2_system_authentication_applications__application_key___patch","parameters":[{"name":"application_key","in":"path","required":true,"schema":{"type":"string","title":"Application Key"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["system"],"summary":"Delete Application Key","description":"Deletes an application key for a user\n---\ntags:\n  - system\nproduces:\n  - application/json\nparameters:\n  - in: header\n    name: Authorization\n    description: Base64 encoded session token\n    required: true\n    type: string\n    default: Token sessionTokenHere==\n  - in: path\n    name: application_key\n    description: Application key to remove\n    type: string\n    required: true\n    default: 1\nresponses:\n  200:\n    description: Key deleted successfully\n  302:\n    description: User is not authorized to delete the key\n  404:\n    description: Key not found\n  500:\n    description: A problem occurred","operationId":"delete_application_key_api_v2_system_authentication_applications__application_key___delete","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"application_key","in":"path","required":true,"schema":{"type":"string","title":"Application Key"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/system/docs/json/":{"get":{"tags":["system"],"summary":"Get Docs","description":"Generates Swagger UI readable JSON\n---\ntags:\n    - system\ndefinitions:\n    - schema:\n        id: GeoJsonPolygon\n        properties:\n            type:\n                type: string\n                default: Polygon\n            coordinates:\n                type: array\n                items:\n                    type: number\n                    default: [[-4.0237,56.0904],[-3.9111,56.1715],[-3.8122,56.0980],[-4.0237,56.0904]]\n    - schema:\n        id: GeoJsonMultiPolygon\n        properties:\n            type:\n                type: string\n                default: MultiPolygon\n            coordinates:\n                type: array\n                items:\n                    type: number\n                    default: [[[-4.0237,56.0904],[-3.9111,56.1715],[-3.8122,56.0980],[-4.0237,56.0904]]]\n    - schema:\n        id: ProjectInfo\n        properties:\n            locale:\n                type: string\n                default: en\n            name:\n                type: string\n                default: Thinkwhere Project\n            shortDescription:\n                type: string\n                default: Awesome little project\n            description:\n                type: string\n                default: Awesome little project and a little bit more\n            instructions:\n                type: string\n                default: Complete the tasks\n            perTaskInstructions:\n                type: string\n                default: Use Thinkwhere Imagery Only\n    - schema:\n        id: GeoJsonFeature\n        properties:\n            type:\n                type: string\n                default: Feature\n            geometry:\n                schema:\n                        $ref: \"#/definitions/GeoJsonMultiPolygon\"\n            properties:\n                type: object\n                properties:\n                    x:\n                        type: integer\n                        default: 2402\n                    y:\n                        type: integer\n                        default: 1736\n                    zoom:\n                        type: integer\n                        default: 12\n                    isSquare:\n                        type: boolean\n                        default: true\n    - schema:\n        id: ValidatedTask\n        properties:\n            taskId:\n                type: integer\n                default: 1\n            status:\n                type: string\n                default: VALIDATED\n            comment:\n                type: string\n                default: Nice work :)\n    - schema:\n        id: ResetTask\n        properties:\n            taskId:\n                type: integer\n                default: 1\n            comment:\n                type: string\n                default: Work in progress\n    - schema:\n        id: ProjectTeams\n        properties:\n            teamId:\n                type: integer\n                default: 1\n            role:\n                type: string\n                default: MAPPER\n    - schema:\n        id: TeamMembers\n        properties:\n            userName:\n                type: string\n                default: user_1\n            function:\n                type: string\n                default: MANAGER","operationId":"get_docs_api_v2_system_docs_json__get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"}}}},"/api/v2/system/languages/":{"get":{"tags":["system"],"summary":"Get","description":"Gets all supported languages\n---\ntags:\n  - system\nproduces:\n  - application/json\nresponses:\n    200:\n        description: Supported Languages\n    500:\n        description: Internal Server Error","operationId":"get_api_v2_system_languages__get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"}}}},"/api/v2/system/heartbeat/":{"get":{"tags":["system"],"summary":"Heartbeat","description":"Simple health-check, if this is unreachable load balancers should be configured to raise an alert\n---\ntags:\n  - system\nproduces:\n  - application/json\nresponses:\n  200:\n    description: Service is Healthy","operationId":"heartbeat_api_v2_system_heartbeat__get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"}}}},"/api/v2/system/contact-admin/":{"post":{"tags":["system"],"summary":"Contact Admin","description":"Send an email to the system admin\n---\ntags:\n  - system\nproduces:\n  - application/json\nparameters:\n  - in: body\n    name: body\n    required: true\n    description: JSON object with the data of the message to send to the system admin\n    schema:\n        properties:\n            name:\n                type: string\n                default: The name of the sender\n            email:\n                type: string\n                default: The email of the sender\n            content:\n                type: string\n                default: The content of the message\nresponses:\n  201:\n    description: Email sent successfully\n  400:\n      description: Invalid Request\n  501:\n    description: Not Implemented\n  500:\n    description: A problem occurred","operationId":"contact_admin_api_v2_system_contact_admin__post","requestBody":{"content":{"application/json":{"schema":{"type":"object","title":"Data"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/system/release/":{"post":{"tags":["system"],"summary":"Release","description":"Fetch latest release version form github and save to database.\n---\ntags:\n  - system\nproduces:\n  - application/json\nresponses:\n  201:\n    description: Saved version successfully to database\n  502:\n    description: Couldn't fetch latest release from github\n  500:\n    description: Internal server error","operationId":"release_api_v2_system_release__post","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"}}}},"/api/v2/system/banner/":{"get":{"tags":["system"],"summary":"Get Banner","description":"Returns a banner\n---\ntags:\n    - system\nproduces:\n    - application/json\nresponses:\n    200:\n        description: Fetched banner successfully\n    500:\n        description: Internal Server Error","operationId":"get_banner_api_v2_system_banner__get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BannerDTO"}}}},"404":{"description":"Not found"}}},"patch":{"tags":["system"],"summary":"Patch Banner","description":"Updates the current banner in the DB\n---\ntags:\n    - system\nproduces:\n    - application/json\nparameters:\n    - in: header\n      name: Authorization\n      description: Base64 encoded session token\n      required: true\n      type: string\n      default: Token sessionTokenHere==\n    - in: body\n      name: body\n      required: true\n      description: JSON object for updating the banner. Message can be written in markdown (max 255 chars) \n\n        \n\n        Allowed tags are `a`, `b`, `i`, `h3`, `h4`, `h5`, `h6`, `p`, `pre`, `strong`\n      schema:\n        properties:\n            message:\n                description: The message to display on the banner. Max 255 characters allowed.\n                required: true\n                type: string\n                default: Welcome to the Tasking Manager\n            visible:\n                description: Whether the banner is visible or not\n                type: boolean\n                default: false\nresponses:\n    201:\n        description: Banner updated successfully\n    400:\n        description: Client Error - Invalid Request\n    401:\n        description: Unauthorized - Invalid credentials\n    403:\n        description: Forbidden","operationId":"patch_banner_api_v2_system_banner__patch","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/BannerDTO"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BannerDTO"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"APIKeyHeader":[]}]}},"/api/v2/system/statistics/":{"get":{"tags":["system"],"summary":"Get Statistics","description":"Get HomePage Stats\n---\ntags:\n  - system\nproduces:\n  - application/json\nparameters:\n- in: query\n  name: abbreviated\n  type: boolean\n  description: Set to false if complete details on projects including total area, campaigns, orgs are required\n  default: True\nresponses:\n    200:\n        description: Project stats\n    500:\n        description: Internal Server Error","operationId":"get_statistics_api_v2_system_statistics__get","parameters":[{"name":"abbreviated","in":"query","required":false,"schema":{"type":"boolean","description":"Set to false if complete details on projects including total area, campaigns, orgs are required","default":true,"title":"Abbreviated"},"description":"Set to false if complete details on projects including total area, campaigns, orgs are required"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/system/authentication/login/":{"get":{"tags":["system"],"summary":"Login","description":"Redirects user to OSM to authenticate\n---\ntags:\n  - system\nproduces:\n  - application/json\nparameters:\n    - in: query\n      name: redirect_uri\n      description: Route to redirect user once authenticated\n      type: string\n      default: /take/me/here\nresponses:\n  200:\n    description: oauth2 params","operationId":"login_api_v2_system_authentication_login__get","parameters":[{"name":"redirect_uri","in":"query","required":false,"schema":{"type":"string","description":"Route to redirect user once authenticated","default":"http://127.0.0.1:3000/authorized","title":"Redirect Uri"},"description":"Route to redirect user once authenticated"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/system/authentication/callback/":{"get":{"tags":["system"],"summary":"Callback","description":"Handles the OSM OAuth callback\n---\ntags:\n  - system\nproduces:\n  - application/json\nparameters:\n    - in: query\n      name: redirect_uri\n      description: Route to redirect user once authenticated\n      type: string\n      default: /take/me/here\n      required: false\n    - in: query\n      name: code\n      description: Code obtained after user authorization\n      type: string\n      required: true\n    - in: query\n      name: email_address\n      description: Email address to used for email notifications from TM.\n      type: string\n      required: false\nresponses:\n  302:\n    description: Redirects to login page, or login failed page\n  400:\n    description: Missing/Invalid code parameter\n  500:\n    description: A problem occurred authenticating the user\n  502:\n    description: A problem occurred negotiating with the OSM API","operationId":"callback_api_v2_system_authentication_callback__get","parameters":[{"name":"code","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"description":"Code obtained after user authorization","title":"Code"},"description":"Code obtained after user authorization"},{"name":"redirect_uri","in":"query","required":false,"schema":{"type":"string","description":"Route to redirect user once authenticated","default":"http://127.0.0.1:3000/authorized","title":"Redirect Uri"},"description":"Route to redirect user once authenticated"},{"name":"email_address","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"description":"Email address to used for email notifications from TM.","title":"Email Address"},"description":"Email address to used for email notifications from TM."}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/system/authentication/email/":{"get":{"tags":["system"],"summary":"Authenticate Email","description":"Authenticates user owns email address\n---\ntags:\n  - system\nproduces:\n  - application/json\nparameters:\n    - in: query\n      name: username\n      type: string\n      default: thinkwhere\n    - in: query\n      name: token\n      type: string\n      default: 1234dvsdf\nresponses:\n    301:\n        description: Will redirect to email validation page\n    403:\n        description: Forbidden\n    404:\n        description: User not found\n    500:\n        description: Internal Server Error","operationId":"authenticate_email_api_v2_system_authentication_email__get","parameters":[{"name":"username","in":"query","required":true,"schema":{"type":"string","description":"Username, e.g. thinkwhere","title":"Username"},"description":"Username, e.g. thinkwhere"},{"name":"token","in":"query","required":true,"schema":{"type":"string","description":"Authentication token, e.g. 1234dvsdf","title":"Token"},"description":"Authentication token, e.g. 1234dvsdf"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/system/image-upload/":{"post":{"tags":["system"],"summary":"Post Image","description":"Uploads an image using the image upload service\n---\ntags:\n  - system\nproduces:\n  - application/json\nparameters:\n  - in: header\n    name: Authorization\n    description: Base64 encoded session token\n    required: true\n    type: string\n    default: Token sessionTokenHere==\n  - in: body\n    name: body\n    required: true\n    description: JSON object containing image data that will be uploaded\n    schema:\n      properties:\n          data:\n              type: string\n              default: base64 encoded image data\n          mime:\n              type: string\n              default: file mime/type\n          filename:\n              type: string\n              default: filename\nresponses:\n  200:\n    description: Image uploaded successfully\n  400:\n    description: Input parameter error\n  403:\n    description: User is not authorized to upload images\n  500:\n    description: A problem occurred\n  501:\n    description: Image upload service not defined","operationId":"post_image_api_v2_system_image_upload__post","requestBody":{"content":{"application/json":{"schema":{"type":"object","title":"Data"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"APIKeyHeader":[]}]}},"/api/v2/notifications/delete-multiple/":{"delete":{"tags":["notifications"],"summary":"Delete Multiple Notifications","description":"Delete specified messages for logged in user\n---\ntags:\n  - notifications\nproduces:\n  - application/json\nparameters:\n    - in: header\n      name: Authorization\n      description: Base64 encoded session token\n      required: true\n      type: string\n      default: Token sessionTokenHere==\n    - in: body\n      name: body\n      required: true\n      description: JSON object containing message ids to delete\n      schema:\n          properties:\n              messageIds:\n                  type: array\n                  items: integer\n                  required: true\nresponses:\n    200:\n        description: Messages deleted\n    500:\n        description: Internal Server Error","operationId":"delete_multiple_notifications_api_v2_notifications_delete_multiple__delete","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"}},"security":[{"APIKeyHeader":[]}]}},"/api/v2/notifications/delete-all/":{"delete":{"tags":["notifications"],"summary":"Delete All Notifications","description":"Delete all messages for logged in user\n---\ntags:\n  - notifications\nproduces:\n  - application/json\nparameters:\n    - in: header\n      name: Authorization\n      description: Base64 encoded session token\n      required: true\n      type: string\n      default: Token sessionTokenHere==\n    - in: query\n      name: messageType\n      type: string\n      description: Optional message-type filter; leave blank to delete all\nresponses:\n    200:\n        description: Messages deleted\n    500:\n        description: Internal Server Error","operationId":"delete_all_notifications_api_v2_notifications_delete_all__delete","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"messageType","in":"query","required":false,"schema":{"type":"string","description":"Optional message-type filter; leave blank to delete all","title":"Messagetype"},"description":"Optional message-type filter; leave blank to delete all"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/notifications/mark-as-read-all/":{"post":{"tags":["notifications"],"summary":"Mark All As Read","description":"Mark all messages as read for logged in user\n---\ntags:\n  - notifications\nproduces:\n  - application/json\nparameters:\n    - in: header\n      name: Authorization\n      description: Base64 encoded session token\n      required: true\n      type: string\n      default: Token sessionTokenHere==\n    - in: query\n      name: messageType\n      type: string\n      description: Optional message-type filter; leave blank to mark all as read\nresponses:\n    200:\n        description: Messages marked as read\n    500:\n        description: Internal Server Error","operationId":"mark_all_as_read_api_v2_notifications_mark_as_read_all__post","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"messageType","in":"query","required":false,"schema":{"type":"string","description":"Optional message-type filter; leave blank to mark all as read","title":"Messagetype"},"description":"Optional message-type filter; leave blank to mark all as read"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/notifications/mark-as-read-multiple/":{"post":{"tags":["notifications"],"summary":"Mark Multiple As Read","description":"Mark specified messages as read for logged in user\n---\ntags:\n  - notifications\nproduces:\n  - application/json\nparameters:\n    - in: header\n      name: Authorization\n      description: Base64 encoded session token\n      required: true\n      type: string\n      default: Token sessionTokenHere==\n    - in: body\n      name: body\n      required: true\n      description: JSON object containing message ids to mark as read\n      schema:\n          properties:\n              messageIds:\n                  type: array\n                  items: integer\n                  required: true\nresponses:\n    200:\n        description: Messages marked as read\n    500:\n        description: Internal Server Error","operationId":"mark_multiple_as_read_api_v2_notifications_mark_as_read_multiple__post","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"}},"security":[{"APIKeyHeader":[]}]}},"/api/v2/notifications/{message_id}/":{"get":{"tags":["notifications"],"summary":"Retrieve Notification","description":"Gets the specified message\n---\ntags:\n  - notifications\nproduces:\n  - application/json\nparameters:\n    - in: header\n      name: Authorization\n      description: Base64 encoded session token\n      required: true\n      type: string\n      default: Token sessionTokenHere==\n    - name: message_id\n      in: path\n      description: The unique message\n      required: true\n      type: integer\n      default: 1\nresponses:\n    200:\n        description: Messages found\n    403:\n        description: Forbidden, if user attempting to ready other messages\n    404:\n        description: Not found\n    500:\n        description: Internal Server Error","operationId":"retrieve_notification_api_v2_notifications__message_id___get","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"message_id","in":"path","required":true,"schema":{"type":"integer","title":"Message Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MessageDTO"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["notifications"],"summary":"Delete Notification","description":"Deletes the specified message\n---\ntags:\n  - notifications\nproduces:\n  - application/json\nparameters:\n    - in: header\n      name: Authorization\n      description: Base64 encoded session token\n      required: true\n      type: string\n      default: Token sessionTokenHere==\n    - name: message_id\n      in: path\n      description: The unique message\n      required: true\n      type: integer\n      default: 1\nresponses:\n    200:\n        description: Messages found\n    403:\n        description: Forbidden, if user attempting to ready other messages\n    404:\n        description: Not found\n    500:\n        description: Internal Server Error","operationId":"delete_notification_api_v2_notifications__message_id___delete","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"message_id","in":"path","required":true,"schema":{"type":"integer","title":"Message Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/notifications/":{"get":{"tags":["notifications"],"summary":"Get Notifications","description":"Get all messages for logged in user\n---\ntags:\n  - notifications\nproduces:\n  - application/json\nparameters:\n    - in: header\n      name: Authorization\n      description: Base64 encoded session token\n      required: true\n      type: string\n      default: Token sessionTokenHere==\n    - in: query\n      name: messageType\n      type: string\n      description: Optional message-type filter; leave blank to retrieve all\n\n        Accepted values are 1 (System), 2 (Broadcast), 3 (Mention), 4 (Validation),\n        5 (Invalidation), 6 (Request team), \n\n        7 (Invitation), 8 (Task comment), 9 (Project chat),\n        10 (Project Activity), and 11 (Team broadcast)\n    - in: query\n      name: from\n      description: Optional from username filter\n      type: string\n    - in: query\n      name: project\n      description: Optional project filter\n      type: string\n    - in: query\n      name: taskId\n      description: Optional task filter\n      type: integer\n    - in: query\n      name: status\n      description: Optional status filter (read or unread)\n      type: string\n    - in: query\n      name: sortBy\n      description:\n        field to sort by, defaults to 'date'. Other useful options are 'read', 'project_id' and 'message_type'\n      type: string\n    - in: query\n      name: sortDirection\n      description: sorting direction ('asc' or 'desc'), defaults to 'desc'\n      type: string\n    - in: query\n      name: page\n      description: Page of results\n      type: integer\n    - in: query\n      name: pageSize\n      description: Size of page, defaults to 10\n      type: integer\nresponses:\n    200:\n        description: Messages found\n    404:\n        description: User has no messages\n    500:\n        description: Internal Server Error","operationId":"get_notifications_api_v2_notifications__get","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"messageType","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"description":"Optional message-type filter; leave blank to retrieve all.\nAccepted values: 1 (System), 2 (Broadcast), 3 (Mention), 4 (Validation),\n5 (Invalidation), 6 (Request team), 7 (Invitation), 8 (Task comment),\n9 (Project chat), 10 (Project Activity), 11 (Team broadcast)","title":"Messagetype"},"description":"Optional message-type filter; leave blank to retrieve all.\nAccepted values: 1 (System), 2 (Broadcast), 3 (Mention), 4 (Validation),\n5 (Invalidation), 6 (Request team), 7 (Invitation), 8 (Task comment),\n9 (Project chat), 10 (Project Activity), 11 (Team broadcast)"},{"name":"from","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"description":"Optional from username filter","title":"From"},"description":"Optional from username filter"},{"name":"project","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"description":"Optional project filter","title":"Project"},"description":"Optional project filter"},{"name":"taskId","in":"query","required":false,"schema":{"anyOf":[{"type":"integer"},{"type":"null"}],"description":"Optional task filter","title":"Taskid"},"description":"Optional task filter"},{"name":"status","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"description":"Optional status filter (read or unread)","title":"Status"},"description":"Optional status filter (read or unread)"},{"name":"sortBy","in":"query","required":false,"schema":{"type":"string","description":"Field to sort by. Options: 'date', 'read', 'project_id', 'message_type'","default":"date","title":"Sortby"},"description":"Field to sort by. Options: 'date', 'read', 'project_id', 'message_type'"},{"name":"sortDirection","in":"query","required":false,"schema":{"type":"string","description":"Sorting direction: 'asc' or 'desc'","default":"desc","title":"Sortdirection"},"description":"Sorting direction: 'asc' or 'desc'"},{"name":"page","in":"query","required":false,"schema":{"type":"integer","description":"Page number","default":1,"title":"Page"},"description":"Page number"},{"name":"pageSize","in":"query","required":false,"schema":{"type":"integer","description":"Number of results per page","default":10,"title":"Pagesize"},"description":"Number of results per page"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/notifications/queries/own/count-unread/":{"get":{"tags":["notifications"],"summary":"Get Unreads","description":"Gets count of unread messages\n---\ntags:\n  - notifications\nproduces:\n  - application/json\nparameters:\n    - in: header\n      name: Authorization\n      description: Base64 encoded session token\n      required: true\n      type: string\n      default: Token sessionTokenHere==\nresponses:\n    200:\n        description: Message info\n    500:\n        description: Internal Server Error","operationId":"get_unreads_api_v2_notifications_queries_own_count_unread__get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"}},"security":[{"APIKeyHeader":[]}]}},"/api/v2/notifications/queries/own/post-unread/":{"post":{"tags":["notifications"],"summary":"Post Unreads","description":"Updates notification datetime for user\n---\ntags:\n  - notifications\nproduces:\n  - application/json\nparameters:\n    - in: header\n      name: Authorization\n      description: Base64 encoded session token\n      required: true\n      type: string\n      default: Token sessionTokenHere==\nresponses:\n    404:\n        description: Notification not found.\n    200:\n        description: Message info\n    500:\n        description: Internal Server Error","operationId":"post_unreads_api_v2_notifications_queries_own_post_unread__post","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"}},"security":[{"APIKeyHeader":[]}]}},"/api/v2/tasks/issues/categories/{category_id}/":{"get":{"tags":["issues"],"summary":"Get Issue","description":"Get specified mapping-issue category\n---\ntags:\n    - issues\nproduces:\n    - application/json\nparameters:\n    - name: category_id\n        in: path\n        description: The unique mapping-issue category ID\n        required: true\n        type: integer\n        default: 1\nresponses:\n    200:\n        description: Mapping-issue category found\n    404:\n        description: Mapping-issue category not found\n    500:\n        description: Internal Server Error","operationId":"get_issue_api_v2_tasks_issues_categories__category_id___get","parameters":[{"name":"category_id","in":"path","required":true,"schema":{"type":"integer","title":"Category Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"patch":{"tags":["issues"],"summary":"Patch Issue","description":"Update an existing mapping-issue category\n---\ntags:\n    - issues\nproduces:\n    - application/json\nparameters:\n    - in: header\n      name: Authorization\n      description: Base64 encoded session token\n      required: true\n      type: string\n      default: Token sessionTokenHere==\n    - name: category_id\n      in: path\n      description: The unique mapping-issue category ID\n      required: true\n      type: integer\n      default: 1\n    - in: body\n      name: body\n      required: true\n      description: JSON object for updating a mapping-issue category\n      schema:\n          properties:\n              name:\n                  type: string\n              description:\n                  type: string\nresponses:\n    200:\n        description: Mapping-issue category updated\n    400:\n        description: Invalid Request\n    401:\n        description: Unauthorized - Invalid credentials\n    404:\n        description: Mapping-issue category not found\n    500:\n        description: Internal Server Error","operationId":"patch_issue_api_v2_tasks_issues_categories__category_id___patch","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"category_id","in":"path","required":true,"schema":{"type":"integer","title":"Category Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/MappingIssueCategoryDTO"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["issues"],"summary":"Delete Issue","description":"Delete the specified mapping-issue category.\nNote that categories can be deleted only if they have never been associated with a task.    To instead archive a used category that is no longer needed,     update the category with its archived flag set to true.\n---\ntags:\n    - issues\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Authorization\n        description: Base64 encoded session token\n        required: true\n        type: string\n        default: Token sessionTokenHere==\n    - name: category_id\n        in: path\n        description: The unique mapping-issue category ID\n        required: true\n        type: integer\n        default: 1\nresponses:\n    200:\n        description: Mapping-issue category deleted\n    401:\n        description: Unauthorized - Invalid credentials\n    404:\n        description: Mapping-issue category not found\n    500:\n        description: Internal Server Error","operationId":"delete_issue_api_v2_tasks_issues_categories__category_id___delete","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"category_id","in":"path","required":true,"schema":{"type":"integer","title":"Category Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/tasks/issues/categories/":{"get":{"tags":["issues"],"summary":"Get Issues Categories","description":"Gets all mapping issue categories\n---\ntags:\n    - issues\nproduces:\n    - application/json\nparameters:\n    - in: query\n        name: includeArchived\n        description: Optional filter to include archived categories\n        type: boolean\n        default: false\nresponses:\n    200:\n        description: Mapping issue categories\n    500:\n        description: Internal Server Error","operationId":"get_issues_categories_api_v2_tasks_issues_categories__get","parameters":[{"name":"includeArchived","in":"query","required":false,"schema":{"type":"boolean","description":"Optional filter to include archived categories","default":false,"title":"Includearchived"},"description":"Optional filter to include archived categories"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"post":{"tags":["issues"],"summary":"Post Issues Categories","description":"Creates a new mapping-issue category\n---\ntags:\n    - issues\nproduces:\n    - application/json\nparameters:\n    - in: header\n      name: Authorization\n      description: Base64 encoded session token\n      required: true\n      type: string\n      default: Token sessionTokenHere==\n    - in: body\n      name: body\n      required: true\n      description: JSON object for creating a new mapping-issue category\n      schema:\n          properties:\n              name:\n                  type: string\n                  required: true\n              description:\n                  type: string\nresponses:\n    200:\n        description: New mapping-issue category created\n    400:\n        description: Invalid Request\n    401:\n        description: Unauthorized - Invalid credentials\n    500:\n        description: Internal Server Error","operationId":"post_issues_categories_api_v2_tasks_issues_categories__post","security":[{"APIKeyHeader":[]}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","title":"Data"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MappingIssueCategoryDTO"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/partners/{partner_id}/":{"get":{"tags":["partners"],"summary":"Retrieve Partner","description":"Get partner by id\n---\ntags:\n    - partners\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Authorization\n        description: Base64 encoded session token\n        required: true\n        type: string\n        default: Token sessionTokenHere==\n    - name: partner_id\n        in: path\n        description: The id of the partner\n        required: true\n        type: integer\n        default: 1\nresponses:\n    200:\n        description: Partner found\n    401:\n        description: Unauthorized - Invalid credentials\n    404:\n        description: Partner not found\n    500:\n        description: Internal Server Error","operationId":"retrieve_partner_api_v2_partners__partner_id___get","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"partner_id","in":"path","required":true,"schema":{"type":"integer","title":"Partner Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["partners"],"summary":"Delete Partner","description":"Deletes an existing partner\n---\ntags:\n    - partners\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Authorization\n        description: Base64 encoded session token\n        type: string\n        required: true\n        default: Token sessionTokenHere==\n    - in: header\n        name: Accept-Language\n        description: Language partner is requesting\n        type: string\n        required: true\n        default: en\n    - name: partner_id\n        in: path\n        description: Partner ID\n        required: true\n        type: integer\n        default: 1\nresponses:\n    200:\n        description: Partner deleted successfully\n    401:\n        description: Unauthorized - Invalid credentials\n    403:\n        description: Forbidden\n    404:\n        description: Partner not found\n    500:\n        description: Internal Server Error","operationId":"delete_partner_api_v2_partners__partner_id___delete","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"partner_id","in":"path","required":true,"schema":{"type":"integer","title":"Partner Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"put":{"tags":["partners"],"summary":"Update Partner","description":"Updates an existing partner\n---\ntags:\n    - partners\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Authorization\n        description: Base64 encoded session token\n        type: string\n        required: true\n        default: Token sessionTokenHere==\n    - in: header\n        name: Accept-Language\n        description: Language partner is requesting\n        type: string\n        required: true\n        default: en\n    - name: partner_id\n        in: path\n        description: Partner ID\n        required: true\n        type: integer\n    - in: body\n        name: body\n        required: true\n        description: JSON object for updating a Partner\n        schema:\n        properties:\n            name:\n                type: string\n                example: Cool Partner Inc.\n            primary_hashtag:\n                type: string\n                example: CoolPartner\n            secondary_hashtag:\n                type: string\n                example: CoolPartner,coolProject-*\n            link_x:\n                type: string\n                example: https://x.com/CoolPartner\n            link_meta:\n                type: string\n                example: https://facebook.com/CoolPartner\n            link_instagram:\n                type: string\n                example: https://instagram.com/CoolPartner\n            current_projects:\n                type: string\n                example: 3425,2134,2643\n            permalink:\n                type: string\n                example: cool-partner\n            logo_url:\n                type: string\n                example: https://tasks.hotosm.org/assets/img/hot-tm-logo.svg\n            website_links:\n                type: array\n                items:\n                    type: string\n            mapswipe_group_id:\n                type: string\n                example: -NL6WXPOdFyWACqwNU2O\nresponses:\n    200:\n        description: Partner updated successfully\n    401:\n        description: Unauthorized - Invalid credentials\n    403:\n        description: Forbidden\n    404:\n        description: Partner not found\n    409:\n        description: Resource duplication\n    500:\n        description: Internal Server Error","operationId":"update_partner_api_v2_partners__partner_id___put","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"partner_id","in":"path","required":true,"schema":{"type":"integer","title":"Partner Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/partners/":{"get":{"tags":["partners"],"summary":"List Partners","description":"Get all active partners\n---\ntags:\n    - partners\nproduces:\n    - application/json\nresponses:\n    200:\n        description: All Partners returned successfully\n    500:\n        description: Internal Server Error","operationId":"list_partners_api_v2_partners__get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"}},"security":[{"APIKeyHeader":[]}]},"post":{"tags":["partners"],"summary":"Create Partner","description":"Creates a new partner\n---\ntags:\n    - partners\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Authorization\n        description: Base64 encoded session token\n        type: string\n        required: true\n        default: Token sessionTokenHere==\n    - in: header\n        name: Accept-Language\n        description: Language partner is requesting\n        type: string\n        required: true\n        default: en\n    - in: body\n        name: body\n        required: true\n        description: JSON object for creating a new Partner\n        schema:\n        properties:\n            name:\n                type: string\n                required: true\n                example: \"American red cross\"\n            primary_hashtag:\n                type: string\n                required: true\n                example: \"#americanredcross\"\n            logo_url:\n                type: string\n                example: https://tasks.hotosm.org/assets/img/hot-tm-logo.svg\n            name:\n                type: string\n                example: Cool Partner Inc.\n            primary_hashtag:\n                type: string\n                example: CoolPartner\n            secondary_hashtag:\n                type: string\n                example: CoolPartner,coolProject-*\n            link_x:\n                type: string\n                example: https://x.com/CoolPartner\n            link_meta:\n                type: string\n                example: https://facebook.com/CoolPartner\n            link_instagram:\n                type: string\n                example: https://instagram.com/CoolPartner\n            current_projects:\n                type: string\n                example: 3425,2134,2643\n            permalink:\n                type: string\n                example: cool-partner\n            logo_url:\n                type: string\n                example: https://tasks.hotosm.org/assets/img/hot-tm-logo.svg\n            website_links:\n                type: array\n                items:\n                    type: string\n                default: [\n                ]\n            mapswipe_group_id:\n                type: string\n                example: -NL6WXPOdFyWACqwNU2O\nresponses:\n    201:\n        description: New partner created successfully\n    401:\n        description: Unauthorized - Invalid credentials\n    403:\n        description: Forbidden\n    409:\n        description: Resource duplication\n    500:\n        description: Internal Server Error","operationId":"create_partner_api_v2_partners__post","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"}},"security":[{"APIKeyHeader":[]}]}},"/api/v2/partners/{permalink}/":{"get":{"tags":["partners"],"summary":"Get Partner","description":"Get partner by permalink\n---\ntags:\n    - partners\nproduces:\n    - application/json\nparameters:\n    - in: header\n        name: Authorization\n        description: Base64 encoded session token\n        required: true\n        type: string\n        default: Token sessionTokenHere==\n    - name: permalink\n        in: path\n        description: The permalink of the partner\n        required: true\n        type: string\nresponses:\n    200:\n        description: Partner found\n    401:\n        description: Unauthorized - Invalid credentials\n    404:\n        description: Partner not found\n    500:\n        description: Internal Server Error","operationId":"get_partner_api_v2_partners__permalink___get","parameters":[{"name":"permalink","in":"path","required":true,"schema":{"type":"string","title":"Permalink"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/partners/{permalink}/filtered-statistics/":{"get":{"tags":["partners"],"summary":"Get Filtered Statistics","description":"Get partner statistics by id and time range\n---\ntags:\n    - partners\nproduces:\n    - application/json\nparameters:\n    - in: query\n        name: fromDate\n        type: string\n        description: Fetch partner statistics from date as yyyy-mm-dd\n        example: \"2024-01-01\"\n    - in: query\n        name: toDate\n        type: string\n        example: \"2024-09-01\"\n        description: Fetch partner statistics to date as yyyy-mm-dd\n    - name: partner_id\n        in: path\n    - name: permalink\n        in: path\n        description: The permalink of the partner\n        required: true\n        type: string\nresponses:\n    200:\n        description: Partner found\n    401:\n        description: Unauthorized - Invalid credentials\n    404:\n        description: Partner not found\n    500:\n        description: Internal Server Error","operationId":"get_filtered_statistics_api_v2_partners__permalink__filtered_statistics__get","parameters":[{"name":"permalink","in":"path","required":true,"schema":{"type":"string","title":"Permalink"}},{"name":"fromDate","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"description":"Fetch partner statistics from date as yyyy-mm-dd","title":"Fromdate"},"description":"Fetch partner statistics from date as yyyy-mm-dd","example":"2024-01-01"},{"name":"toDate","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"description":"Fetch partner statistics to date as yyyy-mm-dd","title":"Todate"},"description":"Fetch partner statistics to date as yyyy-mm-dd","example":"2024-09-01"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v2/partners/{permalink}/general-statistics/":{"get":{"tags":["partners"],"summary":"Get General Statistics","description":"Get partner statistics by id and broken down by each contributor.\nThis API is paginated with limit and offset query parameters.\n---\ntags:\n    - partners\nproduces:\n    - application/json\nparameters:\n    - in: query\n        name: limit\n        description: The number of partner members to fetch\n        type: integer\n        example: 10\n    - in: query\n        name: offset\n        description: The starting index from which to fetch partner members\n        type: integer\n        example: 0\n    - in: query\n        name: downloadAsCSV\n        description: Download users in this group as CSV\n        type: boolean\n        example: false\n    - name: permalink\n        in: path\n        description: The permalink of the partner\n        required: true\n        type: string\nresponses:\n    200:\n        description: Partner found\n    401:\n        description: Unauthorized - Invalid credentials\n    404:\n        description: Partner not found\n    500:\n        description: Internal Server Error","operationId":"get_general_statistics_api_v2_partners__permalink__general_statistics__get","parameters":[{"name":"permalink","in":"path","required":true,"schema":{"type":"string","title":"Permalink"}},{"name":"limit","in":"query","required":false,"schema":{"type":"integer","description":"The number of partner members to fetch","default":10,"title":"Limit"},"description":"The number of partner members to fetch"},{"name":"offset","in":"query","required":false,"schema":{"type":"integer","description":"The starting index from which to fetch partner members","default":0,"title":"Offset"},"description":"The starting index from which to fetch partner members"},{"name":"downloadAsCSV","in":"query","required":false,"schema":{"type":"boolean","description":"Download users in this group as CSV","default":false,"title":"Downloadascsv"},"description":"Download users in this group as CSV"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/":{"get":{"summary":"Home","description":"Redirect home to docs.","operationId":"home__get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}}},"components":{"schemas":{"BannerDTO":{"properties":{"message":{"type":"string","maxLength":255,"title":"Message"},"visible":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Visible","default":true}},"type":"object","required":["message"],"title":"BannerDTO","description":"Describes a JSON model for a banner"},"CampaignDTO-Input":{"properties":{"id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Id"},"name":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Name"},"logo":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Logo"},"url":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Url"},"description":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Description"},"organisations":{"items":{"$ref":"#/components/schemas/OrganisationDTO-Input"},"type":"array","title":"Organisations"}},"type":"object","title":"CampaignDTO"},"CampaignDTO-Output":{"properties":{"id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Id"},"name":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Name"},"logo":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Logo"},"url":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Url"},"description":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Description"},"organisations":{"items":{"$ref":"#/components/schemas/OrganisationDTO-Output"},"type":"array","title":"Organisations"}},"type":"object","title":"CampaignDTO"},"CampaignListDTO":{"properties":{"campaigns":{"anyOf":[{"items":{"$ref":"#/components/schemas/ListCampaignDTO"},"type":"array"},{"type":"null"}],"title":"Campaigns"}},"type":"object","title":"CampaignListDTO","description":"DTO used to define available campaigns"},"DraftProjectDTO":{"properties":{"cloneFromProjectId":{"type":"integer","title":"Clonefromprojectid"},"projectName":{"type":"string","title":"Projectname"},"organisation":{"type":"integer","title":"Organisation"},"areaOfInterest":{"type":"object","title":"Areaofinterest","default":{}},"tasks":{"anyOf":[{"type":"object"},{"type":"null"}],"title":"Tasks","default":{}},"arbitraryTasks":{"type":"boolean","title":"Arbitrarytasks","default":false},"user_id":{"type":"integer","title":"User Id"}},"type":"object","required":["projectName"],"title":"DraftProjectDTO","description":"Describes JSON model used for creating draft project"},"GridDTO":{"properties":{"areaOfInterest":{"type":"object","title":"Areaofinterest"},"grid":{"type":"object","title":"Grid"},"clipToAoi":{"type":"boolean","title":"Cliptoaoi"}},"type":"object","required":["areaOfInterest","grid","clipToAoi"],"title":"GridDTO","description":"Describes JSON model used for creating grids"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"InterestDTO":{"properties":{"id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Id"},"name":{"anyOf":[{"type":"string","minLength":1},{"type":"null"}],"title":"Name"},"userSelected":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Userselected","none_if_default":true},"countProjects":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Countprojects","serialize":false},"countUsers":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Countusers","serialize":false}},"type":"object","title":"InterestDTO"},"LicenseDTO":{"properties":{"licenseId":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Licenseid"},"name":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Name"},"description":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Description"},"plainText":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Plaintext"}},"type":"object","title":"LicenseDTO","description":"DTO used to define a mapping license"},"ListCampaignDTO":{"properties":{"id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Id"},"name":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Name"}},"type":"object","title":"ListCampaignDTO"},"ListOrganisationsDTO":{"properties":{"organisations":{"anyOf":[{"items":{"$ref":"#/components/schemas/OrganisationDTO-Output"},"type":"array"},{"type":"null"}],"title":"Organisations"}},"type":"object","title":"ListOrganisationsDTO"},"MappingIssueCategoryDTO":{"properties":{"categoryId":{"type":"integer","title":"Categoryid"},"name":{"type":"string","title":"Name"},"description":{"type":"string","title":"Description"},"archived":{"type":"boolean","title":"Archived","default":false}},"type":"object","title":"MappingIssueCategoryDTO","description":"DTO used to define a mapping-issue category"},"MessageDTO":{"properties":{"messageId":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Messageid"},"subject":{"anyOf":[{"type":"string","minLength":1},{"type":"null"}],"title":"Subject"},"message":{"anyOf":[{"type":"string","minLength":1},{"type":"null"}],"title":"Message"},"fromUserId":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Fromuserid"},"fromUsername":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Fromusername","default":""},"displayPictureUrl":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Displaypictureurl","default":""},"projectId":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Projectid"},"projectTitle":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Projecttitle"},"taskId":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Taskid"},"messageType":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Messagetype"},"sentDate":{"anyOf":[{"type":"string","format":"date-time"},{"type":"null"}],"title":"Sentdate"},"read":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Read"}},"type":"object","required":["subject","message","fromUserId"],"title":"MessageDTO","description":"DTO used to define a message that will be sent to a user"},"NewCampaignDTO":{"properties":{"name":{"type":"string","title":"Name","serialize_when_none":false},"logo":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Logo","serialize_when_none":false},"url":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Url","serialize_when_none":false},"description":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Description","serialize_when_none":false},"organisations":{"anyOf":[{"items":{"type":"integer"},"type":"array"},{"type":"null"}],"title":"Organisations","serialize_when_none":false}},"type":"object","required":["name"],"title":"NewCampaignDTO","description":"Describes JSON model to create a campaign"},"NewOrganisationDTO":{"properties":{"organisationId":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Organisationid"},"managers":{"items":{"type":"string"},"type":"array","title":"Managers"},"name":{"type":"string","title":"Name"},"slug":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Slug"},"logo":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Logo"},"description":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Description"},"url":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Url"},"type":{"type":"string","title":"Type"},"subscriptionTier":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Subscriptiontier"}},"type":"object","required":["managers","name","type"],"title":"NewOrganisationDTO","description":"Describes a JSON model to create a new organisation"},"NewTeamDTO":{"properties":{"creator":{"type":"number","title":"Creator"},"organisation_id":{"type":"integer","title":"Organisation Id"},"name":{"type":"string","title":"Name"},"description":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Description"},"joinMethod":{"type":"string","title":"Joinmethod"},"visibility":{"type":"string","title":"Visibility","serialize_when_none":false}},"type":"object","required":["organisation_id","name","joinMethod","visibility"],"title":"NewTeamDTO","description":"Describes a JSON model to create a new team"},"OrganisationDTO-Input":{"properties":{"organisationId":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Organisationid"},"managers":{"anyOf":[{"items":{"$ref":"#/components/schemas/OrganisationManagerDTO"},"type":"array"},{"type":"null"}],"title":"Managers"},"name":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Name"},"slug":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Slug"},"logo":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Logo"},"description":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Description"},"url":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Url"},"isManager":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Ismanager"},"projects":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"Projects","default":[]},"teams":{"items":{"$ref":"#/components/schemas/OrganisationTeamsDTO"},"type":"array","title":"Teams"},"campaigns":{"anyOf":[{"items":{"items":{"type":"string"},"type":"array"},"type":"array"},{"type":"null"}],"title":"Campaigns"},"stats":{"anyOf":[{"$ref":"#/components/schemas/OrganizationStatsDTO-Input"},{"type":"null"}]},"type":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Type"},"subscriptionTier":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Subscriptiontier"}},"type":"object","title":"OrganisationDTO"},"OrganisationDTO-Output":{"properties":{"organisationId":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Organisationid"},"managers":{"anyOf":[{"items":{"$ref":"#/components/schemas/OrganisationManagerDTO"},"type":"array"},{"type":"null"}],"title":"Managers"},"name":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Name"},"slug":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Slug"},"logo":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Logo"},"description":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Description"},"url":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Url"},"isManager":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Ismanager"},"projects":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"Projects","default":[]},"teams":{"items":{"$ref":"#/components/schemas/OrganisationTeamsDTO"},"type":"array","title":"Teams"},"campaigns":{"anyOf":[{"items":{"items":{"type":"string"},"type":"array"},"type":"array"},{"type":"null"}],"title":"Campaigns"},"stats":{"anyOf":[{"$ref":"#/components/schemas/OrganizationStatsDTO-Output"},{"type":"null"}]},"type":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Type"},"subscriptionTier":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Subscriptiontier"}},"type":"object","title":"OrganisationDTO"},"OrganisationManagerDTO":{"properties":{"username":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Username"},"pictureUrl":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Pictureurl"}},"type":"object","title":"OrganisationManagerDTO"},"OrganisationTeamsDTO":{"properties":{"teamId":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Teamid"},"name":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Name"},"description":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Description"},"joinMethod":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Joinmethod"},"visibility":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Visibility"},"members":{"items":{"additionalProperties":{"anyOf":[{"type":"string"},{"type":"null"}]},"type":"object"},"type":"array","title":"Members","default":[]}},"type":"object","title":"OrganisationTeamsDTO"},"OrganizationProjectsStatsDTO":{"properties":{"draft":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Draft"},"published":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Published"},"archived":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Archived"},"recent":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Recent"},"stale":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Stale"}},"type":"object","title":"OrganizationProjectsStatsDTO"},"OrganizationStatsDTO-Input":{"properties":{"projects":{"anyOf":[{"$ref":"#/components/schemas/OrganizationProjectsStatsDTO"},{"type":"null"}]},"active_tasks":{"anyOf":[{"$ref":"#/components/schemas/OrganizationTasksStatsDTO-Input"},{"type":"null"}]}},"type":"object","title":"OrganizationStatsDTO"},"OrganizationStatsDTO-Output":{"properties":{"projects":{"anyOf":[{"$ref":"#/components/schemas/OrganizationProjectsStatsDTO"},{"type":"null"}]},"activeTasks":{"anyOf":[{"$ref":"#/components/schemas/OrganizationTasksStatsDTO-Output"},{"type":"null"}]}},"type":"object","title":"OrganizationStatsDTO"},"OrganizationTasksStatsDTO-Input":{"properties":{"ready":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Ready","default":0},"locked_for_mapping":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Locked For Mapping","default":0},"locked_for_validation":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Locked For Validation","default":0},"mapped":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Mapped","default":0},"validated":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Validated","default":0},"invalidated":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Invalidated","default":0},"badimagery":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Badimagery","default":0}},"type":"object","title":"OrganizationTasksStatsDTO"},"OrganizationTasksStatsDTO-Output":{"properties":{"ready":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Ready","default":0},"lockedForMapping":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Lockedformapping","default":0},"lockedForValidation":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Lockedforvalidation","default":0},"mapped":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Mapped","default":0},"validated":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Validated","default":0},"invalidated":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Invalidated","default":0},"badImagery":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Badimagery","default":0}},"type":"object","title":"OrganizationTasksStatsDTO"},"TagsDTO":{"properties":{"tags":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"Tags"}},"type":"object","title":"TagsDTO","description":"DTO used to define available tags"},"TeamMembersDTO":{"properties":{"username":{"type":"string","title":"Username"},"function":{"type":"string","title":"Function"},"active":{"type":"boolean","title":"Active"},"joinRequestNotifications":{"type":"boolean","title":"Joinrequestnotifications","default":false},"pictureUrl":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Pictureurl"},"joinedDate":{"anyOf":[{"type":"string","format":"date-time"},{"type":"null"}],"title":"Joineddate"}},"type":"object","required":["username","function","active"],"title":"TeamMembersDTO"},"UpdateOrganisationDTO":{"properties":{"organisationId":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Organisationid"},"managers":{"items":{"type":"string"},"type":"array","title":"Managers","default":[]},"name":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Name"},"slug":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Slug"},"logo":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Logo"},"description":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Description"},"url":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Url"},"isManager":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Ismanager"},"projects":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"Projects","default":[]},"teams":{"items":{"$ref":"#/components/schemas/OrganisationTeamsDTO"},"type":"array","title":"Teams"},"campaigns":{"anyOf":[{"items":{"items":{"type":"string"},"type":"array"},"type":"array"},{"type":"null"}],"title":"Campaigns"},"stats":{"anyOf":[{"$ref":"#/components/schemas/OrganizationStatsDTO-Input"},{"type":"null"}]},"type":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Type"},"subscriptionTier":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Subscriptiontier"}},"type":"object","title":"UpdateOrganisationDTO"},"UpdateTeamDTO":{"properties":{"creator":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Creator"},"team_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Team Id"},"organisation":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Organisation"},"organisation_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Organisation Id"},"name":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Name"},"logo":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Logo"},"description":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Description"},"joinMethod":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Joinmethod"},"visibility":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Visibility","serialize_when_none":false},"members":{"anyOf":[{"items":{"$ref":"#/components/schemas/TeamMembersDTO"},"type":"array"},{"type":"null"}],"title":"Members","default":[],"serialize_when_none":false}},"type":"object","title":"UpdateTeamDTO","description":"Describes a JSON model to update a team"},"UserRegisterEmailDTO":{"properties":{"id":{"type":"integer","title":"Id","serialize_when_none":false},"email":{"type":"string","title":"Email"},"success":{"type":"boolean","title":"Success","default":false},"details":{"type":"string","title":"Details"}},"type":"object","required":["email"],"title":"UserRegisterEmailDTO","description":"DTO containing data for user registration with email model"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}},"securitySchemes":{"APIKeyHeader":{"type":"apiKey","in":"header","name":"Authorization"}}}}