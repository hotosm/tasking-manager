name: Build & publish TM backend container image

on:
  push:
    branches:
      - deployment/hot-tasking-manager
      - deployment/demo-tasking-manager
      - deployment/container-tasking-manager

  pull_request:
    branches:
      - main
      - staging
      - develop
      - deployment/hot-tasking-manager
      - deployment/demo-tasking-manager
      - deployment/container-tasking-manager

env:
  # NOTE: You can override these variables in the workflow file with GitHub Variables
  # vars.TEAM is team name here in case you want to deploy for different team. Default is hotosm
  # vars.INFRA_ENVIRONMENT is environment name here in case you have applied infrastructue with different environment name. Default is github.ref_name

  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ vars.IMAGE_NAME || 'hotosm/tasking-manager-backend' }}

jobs:
  image-build-and-push:
    name: Build Container Images
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      image_tags: ${{ steps.meta.outputs.tags }}

    steps:
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set container image metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ github.ref_name }}
            type=raw,value=${{ github.sha }}

      - name: Build and push container image
        id: build-push-image
        uses: docker/build-push-action@v5
        with:
          context: "{{defaultContext}}"
          target: prod
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: |
            type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:buildcache-${{ github.ref_name }}
            type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:buildcache-main
            type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:buildcache-staging
            type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:buildcache-develop
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:buildcache-${{ github.ref_name }},mode=max
